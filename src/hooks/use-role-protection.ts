import { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { UserRole } from '@prisma/client';\nimport { useAuth } from './use-auth';\n\nexport function useRoleProtection(allowedRoles: UserRole[] = []) {\n  const { role, isLoading } = useAuth();\n  const router = useRouter();\n  \n  useEffect(() => {\n    if (isLoading) return;\n    \n    if (!role || (allowedRoles.length > 0 && !allowedRoles.includes(role))) {\n      if (!role) {\n        router.push(/login?callbackUrl=);\n      } else {\n        const dashboardPath = getDashboardByRole(role);\n        router.push(dashboardPath);\n      }\n    }\n  }, [role, isLoading, allowedRoles, router]);\n  \n  return { role, isLoading };\n}\n\nfunction getDashboardByRole(role: UserRole): string {\n  switch (role) {\n    case 'CLIENT':\n      return '/client';\n    case 'DELIVERER':\n      return '/deliverer';\n    case 'MERCHANT':\n      return '/merchant';\n    case 'PROVIDER':\n      return '/provider';\n    case 'ADMIN':\n      return '/admin';\n    default:\n      return '/';\n  }\n}