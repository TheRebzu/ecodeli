import { NextResponse } from 'next/server';\nimport { getToken } from 'next-auth/jwt';\nimport { UserRole } from '@prisma/client';\nimport type { NextRequest } from 'next/server';\n\nexport const config = {\n  matcher: [\n    '/client/:path*',\n    '/deliverer/:path*',\n    '/merchant/:path*',\n    '/provider/:path*',\n    '/admin/:path*',\n    '/login',\n    '/register/:path*',\n  ],\n};\n\nexport async function middleware(request: NextRequest) {\n  const token = await getToken({ req: request });\n  const pathname = request.nextUrl.pathname;\n  \n  // Redirect authenticated users away from auth pages\n  if (token && (pathname.startsWith('/login') || pathname.startsWith('/register'))) {\n    const dashboardPath = getDashboardByRole(token.role as UserRole);\n    return NextResponse.redirect(new URL(dashboardPath, request.url));\n  }\n  \n  // Protect role-specific routes\n  if (pathname.startsWith('/client') && token?.role !== 'CLIENT') {\n    return handleUnauthorized(request, token);\n  }\n  \n  if (pathname.startsWith('/deliverer') && token?.role !== 'DELIVERER') {\n    return handleUnauthorized(request, token);\n  }\n  \n  if (pathname.startsWith('/merchant') && token?.role !== 'MERCHANT') {\n    return handleUnauthorized(request, token);\n  }\n  \n  if (pathname.startsWith('/provider') && token?.role !== 'PROVIDER') {\n    return handleUnauthorized(request, token);\n  }\n  \n  if (pathname.startsWith('/admin') && token?.role !== 'ADMIN') {\n    return handleUnauthorized(request, token);\n  }\n  \n  return NextResponse.next();\n}\n\nfunction handleUnauthorized(request: NextRequest, token: any) {\n  if (!token) {\n    return NextResponse.redirect(\n      new URL(/login?callbackUrl=, request.url)\n    );\n  }\n  \n  const dashboardPath = getDashboardByRole(token.role as UserRole);\n  return NextResponse.redirect(new URL(dashboardPath, request.url));\n}\n\nfunction getDashboardByRole(role: UserRole): string {\n  switch (role) {\n    case 'CLIENT':\n      return '/client';\n    case 'DELIVERER':\n      return '/deliverer';\n    case 'MERCHANT':\n      return '/merchant';\n    case 'PROVIDER':\n      return '/provider';\n    case 'ADMIN':\n      return '/admin';\n    default:\n      return '/';\n  }\n}