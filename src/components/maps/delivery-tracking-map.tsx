import { useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, Polyline } from '@react-google-maps/api';\n\nexport function DeliveryTrackingMap({ delivery, currentLocation }) {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY || '',\n  });\n  \n  const [map, setMap] = useState(null);\n  \n  const center = currentLocation || { lat: 48.8566, lng: 2.3522 }; // Paris par défaut\n  \n  const onLoad = (map) => {\n    setMap(map);\n  };\n  \n  const onUnmount = () => {\n    setMap(null);\n  };\n  \n  if (!isLoaded) return <div>Chargement de la carte...</div>;\n  \n  return (\n    <GoogleMap\n      mapContainerStyle={{ width: '100%', height: '400px' }}\n      center={center}\n      zoom={13}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n    >\n      {/* Marqueur pour le point de départ */}\n      {delivery?.pickupCoordinates && (\n        <Marker\n          position={delivery.pickupCoordinates}\n          icon={{ url: '/icons/pickup.svg', scaledSize: { width: 30, height: 30 } }}\n        />\n      )}\n      \n      {/* Marqueur pour le point de livraison */}\n      {delivery?.deliveryCoordinates && (\n        <Marker\n          position={delivery.deliveryCoordinates}\n          icon={{ url: '/icons/delivery.svg', scaledSize: { width: 30, height: 30 } }}\n        />\n      )}\n      \n      {/* Marqueur pour la position actuelle du livreur */}\n      {currentLocation && (\n        <Marker\n          position={currentLocation}\n          icon={{ url: '/icons/current.svg', scaledSize: { width: 30, height: 30 } }}\n        />\n      )}\n      \n      {/* Tracé de l'itinéraire */}\n      {delivery?.route && (\n        <Polyline\n          path={delivery.route}\n          options={{\n            strokeColor: '#0088FF',\n            strokeOpacity: 0.8,\n            strokeWeight: 5,\n          }}\n        />\n      )}\n    </GoogleMap>\n  );\n}