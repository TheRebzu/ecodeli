'use client';

import { useEffect, useState } from 'react';
import { useOnboarding } from '@/context/onboarding-context';
import { TutorialStep } from '../tutorial-step';
import { TutorialProgress } from '../tutorial-progress';
import { TutorialNavigation } from '../tutorial-navigation';
import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { CheckCircle, AlertTriangle, Star, MapPin, Package, Truck, Leaf, Shield } from 'lucide-react';

// Labels pour les boutons de navigation du tutoriel
const navigationLabels = {
  skip: 'Passer le tutoriel',
  previous: 'Pr√©c√©dent',
  next: 'Suivant',
  finish: 'Terminer Mission 1',
};

// D√©finition compl√®te des √©tapes du tutoriel client Mission 1
const CLIENT_TUTORIAL_STEPS = [
  {
    id: 'welcome',
    title: 'üå± Bienvenue chez EcoDeli - Mission 1',
    description: 'Commen√ßons votre aventure √©cologique ! Ce tutoriel obligatoire vous guide √† travers les fonctionnalit√©s essentielles de notre plateforme de livraison durable.',
    image: '/images/onboarding/client/welcome.png',
    isMission1: true,
    isRequired: true,
    content: {
      intro: 'EcoDeli r√©volutionne la livraison urbaine en privil√©giant les moyens de transport √©cologiques et les pratiques durables.',
      objectives: [
        'D√©couvrir le concept de livraison √©cologique',
        'Apprendre √† utiliser la plateforme efficacement', 
        'Comprendre notre √©cosyst√®me de services',
        'Ma√Ætriser les bonnes pratiques environnementales'
      ]
    }
  },
  {
    id: 'ecodeli-concept',
    title: 'üåç Le concept EcoDeli',
    description: 'EcoDeli r√©volutionne la livraison en privil√©giant les moyens de transport √©cologiques : v√©los, trottinettes √©lectriques, marche √† pied, et transports en commun.',
    image: '/images/onboarding/client/concept.png',
    content: {
      highlights: [
        'üö¥‚Äç‚ôÇÔ∏è Livraisons √† v√©lo et moyens durables',
        'üì¶ Emballages r√©utilisables et consign√©s',
        'üå± R√©duction de l\'empreinte carbone',
        'üíö Contribution √† l\'√©conomie circulaire'
      ],
      impact: {
        co2Reduction: '75% de CO2 en moins',
        packaging: '90% d\'emballages r√©utilis√©s',
        localJobs: '500+ emplois locaux cr√©√©s'
      }
    },
    isMission1: true,
    isRequired: true,
  },
  {
    id: 'dashboard-overview',
    title: 'üìä Votre tableau de bord',
    description: "Le tableau de bord est votre centre de contr√¥le. Vous y retrouvez toutes vos informations importantes en un coup d'≈ìil.",
    image: '/images/onboarding/client/dashboard.png',
    content: {
      features: [
        {
          title: 'Statistiques personnelles',
          description: 'Suivez vos livraisons, √©conomies CO2, et points fid√©lit√©',
          icon: 'üìà'
        },
        {
          title: 'Activit√© r√©cente',
          description: 'Historique de vos derni√®res commandes et livraisons',
          icon: 'üìã'
        },
        {
          title: 'Actions rapides',
          description: 'Cr√©er une annonce, r√©server un service, acc√©der au stockage',
          icon: '‚ö°'
        }
      ]
    },
    isMission1: true,
    isRequired: true,
  },
  {
    id: 'create-announcement',
    title: 'üì¢ Cr√©er votre premi√®re annonce',
    description: 'Les annonces sont le c≈ìur du syst√®me EcoDeli. Apprenez √† cr√©er une demande de livraison efficace.',
    image: '/images/onboarding/client/announcements.png',
    content: {
      steps: [
        '1. D√©finissez les points de collecte et livraison',
        '2. Choisissez le type de transport souhait√©',
        '3. Indiquez les caract√©ristiques de votre colis',
        '4. Fixez votre budget et d√©lais',
        '5. Publiez et attendez les propositions'
      ],
      tips: [
        'üí° Soyez pr√©cis dans vos descriptions',
        '‚è∞ Planifiez √† l\'avance pour de meilleurs tarifs',
        'üè∑Ô∏è Utilisez des tags pour faciliter la recherche'
      ]
    },
    isMission1: true,
    isRequired: true,
  },
  {
    id: 'delivery-tracking',
    title: 'üì¶ Suivi en temps r√©el',
    description: "Une fois votre annonce accept√©e, suivez votre livraison en temps r√©el avec notre syst√®me de tracking avanc√©.",
    image: '/images/onboarding/client/deliveries.png',
    content: {
      features: [
        {
          title: 'G√©olocalisation temps r√©el',
          description: 'Suivez votre livreur sur la carte',
          icon: 'üó∫Ô∏è'
        },
        {
          title: 'Notifications automatiques',
          description: 'Soyez alert√© des √©tapes importantes',
          icon: 'üîî'
        },
        {
          title: 'Code de r√©cup√©ration',
          description: 'Syst√®me s√©curis√© pour la remise du colis',
          icon: 'üîê'
        },
        {
          title: '√âvaluation du service',
          description: 'Notez votre exp√©rience apr√®s livraison',
          icon: '‚≠ê'
        }
      ]
    },
    isMission1: true,
    isRequired: true,
  },
  {
    id: 'services-ecosystem',
    title: 'üõçÔ∏è L\'√©cosyst√®me de services',
    description: 'Au-del√† de la livraison, d√©couvrez nos services partenaires : r√©paration, nettoyage √©cologique, courses responsables...',
    image: '/images/onboarding/client/services.png',
    content: {
      categories: [
        {
          title: 'üîß Services de r√©paration',
          description: 'R√©parez au lieu de jeter',
          examples: ['R√©paration √©lectronique', 'Couture et retouches', 'R√©paration v√©lo']
        },
        {
          title: 'üßΩ Nettoyage √©cologique',
          description: 'Services d\'entretien responsables',
          examples: ['Produits biod√©gradables', 'Techniques √©conomes en eau', '√âquipes locales']
        },
        {
          title: 'üõí Courses responsables',
          description: 'Approvisionnement local et bio',
          examples: ['Producteurs locaux', 'Produits de saison', 'Zero d√©chet']
        },
        {
          title: '‚ôªÔ∏è Services de recyclage',
          description: 'Gestion des d√©chets optimis√©e',
          examples: ['Tri s√©lectif', 'Compostage', 'Valorisation']
        }
      ]
    },
    isMission1: true,
    isRequired: true,
  },
  {
    id: 'storage-system',
    title: 'üì¶ Syst√®me de stockage intelligent',
    description: 'Notre r√©seau de consignes et d\'emballages r√©utilisables r√©volutionne la logistique urbaine.',
    image: '/images/onboarding/client/storage.png',
    content: {
      benefits: [
        'üìç R√©seau de points de collecte dans votre ville',
        '‚ôªÔ∏è Emballages consign√©s et r√©utilisables',
        '‚è∞ Disponibilit√© 24h/7j pour plus de flexibilit√©',
        'üí∞ √âconomies sur les frais d\'emballage',
        'üå± Impact environnemental r√©duit'
      ],
      howItWorks: [
        '1. R√©servez une bo√Æte de la taille adapt√©e',
        '2. D√©posez votre colis dans un point relais',
        '3. Le livreur r√©cup√®re et livre avec la m√™me bo√Æte',
        '4. La bo√Æte est nettoy√©e et remise en circulation'
      ],
      stats: {
        boxes: '10,000+ bo√Ætes en circulation',
        reuse: '50x r√©utilisations moyennes',
        locations: '200+ points de collecte'
      }
    },
    isMission1: true,
    isRequired: true,
  },
  {
    id: 'payment-system',
    title: 'üí≥ Syst√®me de paiement s√©curis√©',
    description: 'D√©couvrez notre syst√®me de paiement transparent avec s√©questre automatique pour votre s√©curit√©.',
    image: '/images/onboarding/client/payment.png',
    content: {
      features: [
        {
          title: 'Paiement s√©curis√©',
          description: 'Vos fonds sont bloqu√©s jusqu\'√† la livraison confirm√©e',
          icon: 'üîí'
        },
        {
          title: 'Tarification transparente',
          description: 'Pas de frais cach√©s, tout est affich√© clairement',
          icon: 'üíé'
        },
        {
          title: 'Remboursement garanti',
          description: 'Protection automatique en cas de probl√®me',
          icon: 'üõ°Ô∏è'
        },
        {
          title: 'Points de fid√©lit√©',
          description: 'Gagnez des EcoPoints √† chaque livraison',
          icon: 'üåü'
        }
      ],
      security: [
        'Chiffrement SSL 256 bits',
        'Conformit√© PCI DSS',
        'Audit de s√©curit√© mensuel',
        'Assurance couvrant 100% des transactions'
      ]
    },
    isMission1: true,
    isRequired: true,
  },
  {
    id: 'environmental-impact',
    title: 'üå± Votre impact environnemental',
    description: 'D√©couvrez comment chacune de vos livraisons contribue √† un monde plus durable.',
    image: '/images/onboarding/client/environment.png',
    content: {
      calculator: {
        title: 'Calculateur d\'impact',
        description: 'Chaque livraison EcoDeli vs livraison traditionnelle'
      },
      metrics: [
        {
          title: 'CO2 √©conomis√©',
          traditional: '2.5 kg CO2',
          ecodeli: '0.5 kg CO2',
          saving: '80% de r√©duction'
        },
        {
          title: 'Emballages',
          traditional: '3 emballages jetables',
          ecodeli: '1 emballage r√©utilisable',
          saving: '90% de d√©chets en moins'
        },
        {
          title: 'Emploi local',
          traditional: 'Automatisation',
          ecodeli: 'Emploi local cr√©√©',
          saving: '100% humain'
        }
      ],
      gamification: {
        title: 'Programme EcoWarrior',
        levels: ['D√©butant Vert', 'Eco-Citoyen', 'Champion Durable', 'EcoWarrior'],
        rewards: ['R√©ductions exclusives', 'Acc√®s prioritaire', 'Cadeaux durables']
      }
    },
    isMission1: true,
    isRequired: true,
  },
  {
    id: 'mission1-complete',
    title: 'üéâ Mission 1 accomplie !',
    description: 'F√©licitations ! Vous ma√Ætrisez maintenant les bases d\'EcoDeli. Vous √™tes pr√™t √† commencer votre aventure √©cologique.',
    image: '/images/onboarding/client/completion.png',
    content: {
      achievements: [
        '‚úÖ Concept EcoDeli ma√Ætris√©',
        '‚úÖ Navigation dans la plateforme',
        '‚úÖ Cr√©ation d\'annonces',
        '‚úÖ Syst√®me de tracking',
        '‚úÖ √âcosyst√®me de services',
        '‚úÖ Stockage intelligent',
        '‚úÖ Paiements s√©curis√©s',
        '‚úÖ Impact environnemental',
      ],
      nextSteps: [
        'üöÄ Cr√©ez votre premi√®re annonce',
        'üîç Explorez les services disponibles',
        'üì¶ Testez le syst√®me de stockage',
        'üåü Gagnez vos premiers EcoPoints'
      ],
      unlocked: [
        'Acc√®s complet √† la plateforme',
        'Programme de fid√©lit√© EcoWarrior',
        'Support client prioritaire',
        'Notifications personnalis√©es'
      ]
    },
    isMission1: true,
    isRequired: true,
    isCompletion: true
  }
];

type ClientTutorialProps = {
  options?: {
    redirectTo?: string;
    onComplete?: () => Promise<void>;
  };
  isMission1?: boolean;
  mission1Hook?: any; // Hook Mission 1 depuis le contr√¥leur
};

/**
 * Tutoriel client √©tendu avec Mission 1 compl√®te
 */
export function ClientTutorial({ 
  options, 
  isMission1 = false, 
  mission1Hook 
}: ClientTutorialProps) {
  const [currentStep, setCurrentStep] = useState(0);
  const [isCompleting, setIsCompleting] = useState(false);

  // Utiliser le hook Mission 1 si fourni, sinon √©tat local
  const currentStepIndex = mission1Hook?.currentStep ?? currentStep;
  const totalSteps = CLIENT_TUTORIAL_STEPS.length;

  // Configurer les √©tapes dans le hook Mission 1
  useEffect(() => {
    if (mission1Hook && isMission1) {
      mission1Hook.setStepsConfiguration(0, totalSteps);
    }
  }, [mission1Hook, isMission1, totalSteps]);

  // Gestionnaire pour la completion du tutoriel
  const handleComplete = () => {
    setIsCompleting(true);
    
    const completeAsync = async () => {
      try {
        if (isMission1 && mission1Hook) {
          await mission1Hook.completeMission1();
        } else if (options?.onComplete) {
          await options.onComplete();
        }
      } catch (error) {
        console.error('Erreur lors de la completion:', error);
      } finally {
        setIsCompleting(false);
      }
    };
    
    completeAsync();
  };

  // Navigation entre les √©tapes
  const goToStep = (stepIndex: number) => {
    if (mission1Hook) {
      mission1Hook.goToStep(stepIndex);
    } else {
      setCurrentStep(stepIndex);
    }
  };

  const goToNextStep = () => {
    if (currentStepIndex < totalSteps - 1) {
      goToStep(currentStepIndex + 1);
    } else {
      handleComplete();
    }
  };

  const goToPreviousStep = () => {
    if (currentStepIndex > 0) {
      goToStep(currentStepIndex - 1);
    }
  };

  // Rendu du contenu de l'√©tape
  const renderStepContent = () => {
    const step = CLIENT_TUTORIAL_STEPS[currentStepIndex];
    if (!step) return null;

    return (
      <div className="space-y-6">
        {/* En-t√™te de l'√©tape */}
        <div className="text-center space-y-2">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">
            {step.title}
          </h2>
          <p className="text-lg text-gray-600 dark:text-gray-300">
            {step.description}
          </p>
          
          {step.isMission1 && (
            <Badge variant="destructive" className="mt-2">
              Mission 1 - √âtape {currentStepIndex + 1}/{totalSteps}
            </Badge>
          )}
        </div>

        {/* Contenu sp√©cifique √† chaque √©tape */}
        <div className="max-h-96 overflow-y-auto">
          {step.id === 'welcome' && (
            <WelcomeStepContent step={step} />
          )}
          
          {step.id === 'ecodeli-concept' && (
            <ConceptStepContent step={step} />
          )}
          
          {step.id === 'dashboard-overview' && (
            <DashboardStepContent step={step} />
          )}
          
          {step.id === 'create-announcement' && (
            <AnnouncementStepContent step={step} />
          )}
          
          {step.id === 'delivery-tracking' && (
            <TrackingStepContent step={step} />
          )}
          
          {step.id === 'services-ecosystem' && (
            <ServicesStepContent step={step} />
          )}
          
          {step.id === 'storage-system' && (
            <StorageStepContent step={step} />
          )}
          
          {step.id === 'payment-system' && (
            <PaymentStepContent step={step} />
          )}
          
          {step.id === 'environmental-impact' && (
            <EnvironmentStepContent step={step} />
          )}
          
          {step.id === 'mission1-complete' && (
            <CompletionStepContent step={step} />
          )}
        </div>
      </div>
    );
  };

  return (
    <div className="w-full max-w-4xl mx-auto p-6 space-y-6">
      {/* Barre de progression */}
      <TutorialProgress 
        currentStep={currentStepIndex} 
        totalSteps={totalSteps}
      />
      
      {/* Contenu de l'√©tape */}
      {renderStepContent()}
      
      {/* Navigation */}
      <TutorialNavigation
        currentStep={currentStepIndex}
        totalSteps={totalSteps}
        onPrevious={goToPreviousStep}
        onNext={goToNextStep}
        onSkip={isMission1 ? () => {} : handleComplete} // Pas de skip pour Mission 1
        onComplete={handleComplete}
        isLoading={isCompleting}
        labels={navigationLabels}
      />
    </div>
  );
}

// Composants pour le contenu sp√©cifique de chaque √©tape

function WelcomeStepContent({ step }: { step: any }) {
  return (
    <div className="space-y-4">
      <div className="bg-green-50 p-6 rounded-lg border border-green-200">
        <p className="text-green-800 mb-4">{step.content.intro}</p>
        <h4 className="font-semibold text-green-900 mb-2">Objectifs de Mission 1 :</h4>
        <ul className="space-y-1">
          {step.content.objectives.map((objective: string, index: number) => (
            <li key={index} className="flex items-center gap-2 text-green-700">
              <CheckCircle className="h-4 w-4" />
              {objective}
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
}

function ConceptStepContent({ step }: { step: any }) {
  return (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        {step.content.highlights.map((highlight: string, index: number) => (
          <div key={index} className="bg-blue-50 p-4 rounded-lg border border-blue-200">
            <p className="text-blue-800">{highlight}</p>
          </div>
        ))}
      </div>
      
      <div className="bg-green-100 p-6 rounded-lg">
        <h4 className="font-semibold text-green-900 mb-4">Notre impact :</h4>
        <div className="grid grid-cols-3 gap-4 text-center">
          <div>
            <div className="text-2xl font-bold text-green-600">{step.content.impact.co2Reduction}</div>
            <div className="text-sm text-green-700">de CO2 en moins</div>
          </div>
          <div>
            <div className="text-2xl font-bold text-green-600">{step.content.impact.packaging}</div>
            <div className="text-sm text-green-700">d'emballages r√©utilis√©s</div>
          </div>
          <div>
            <div className="text-2xl font-bold text-green-600">{step.content.impact.localJobs}</div>
            <div className="text-sm text-green-700">emplois locaux cr√©√©s</div>
          </div>
        </div>
      </div>
    </div>
  );
}

function DashboardStepContent({ step }: { step: any }) {
  return (
    <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
      {step.content.features.map((feature: any, index: number) => (
        <Card key={index} className="border-blue-200">
          <CardHeader className="text-center">
            <div className="text-3xl mb-2">{feature.icon}</div>
            <CardTitle className="text-lg">{feature.title}</CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-sm text-gray-600">{feature.description}</p>
          </CardContent>
        </Card>
      ))}
    </div>
  );
}

function AnnouncementStepContent({ step }: { step: any }) {
  return (
    <div className="space-y-6">
      <div className="bg-blue-50 p-6 rounded-lg">
        <h4 className="font-semibold text-blue-900 mb-4">√âtapes de cr√©ation :</h4>
        <ol className="space-y-2">
          {step.content.steps.map((stepItem: string, index: number) => (
            <li key={index} className="text-blue-800">{stepItem}</li>
          ))}
        </ol>
      </div>
      
      <div className="bg-yellow-50 p-6 rounded-lg">
        <h4 className="font-semibold text-yellow-900 mb-4">Conseils d'expert :</h4>
        <ul className="space-y-2">
          {step.content.tips.map((tip: string, index: number) => (
            <li key={index} className="text-yellow-800">{tip}</li>
          ))}
        </ul>
      </div>
    </div>
  );
}

function TrackingStepContent({ step }: { step: any }) {
  return (
    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
      {step.content.features.map((feature: any, index: number) => (
        <Card key={index} className="border-purple-200">
          <CardHeader>
            <div className="flex items-center gap-3">
              <span className="text-2xl">{feature.icon}</span>
              <CardTitle className="text-lg">{feature.title}</CardTitle>
            </div>
          </CardHeader>
          <CardContent>
            <p className="text-sm text-gray-600">{feature.description}</p>
          </CardContent>
        </Card>
      ))}
    </div>
  );
}

function ServicesStepContent({ step }: { step: any }) {
  return (
    <div className="space-y-4">
      {step.content.categories.map((category: any, index: number) => (
        <Card key={index} className="border-green-200">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <span>{category.title}</span>
            </CardTitle>
            <CardDescription>{category.description}</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="flex flex-wrap gap-2">
              {category.examples.map((example: string, exIndex: number) => (
                <Badge key={exIndex} variant="outline" className="text-xs">
                  {example}
                </Badge>
              ))}
            </div>
          </CardContent>
        </Card>
      ))}
    </div>
  );
}

function StorageStepContent({ step }: { step: any }) {
  return (
    <div className="space-y-6">
      <div className="bg-purple-50 p-6 rounded-lg">
        <h4 className="font-semibold text-purple-900 mb-4">Avantages :</h4>
        <ul className="space-y-2">
          {step.content.benefits.map((benefit: string, index: number) => (
            <li key={index} className="text-purple-800">{benefit}</li>
          ))}
        </ul>
      </div>
      
      <div className="bg-orange-50 p-6 rounded-lg">
        <h4 className="font-semibold text-orange-900 mb-4">Comment √ßa marche :</h4>
        <ol className="space-y-2">
          {step.content.howItWorks.map((stepItem: string, index: number) => (
            <li key={index} className="text-orange-800">{stepItem}</li>
          ))}
        </ol>
      </div>
      
      <div className="grid grid-cols-3 gap-4 text-center">
        <div className="bg-gray-50 p-4 rounded-lg">
          <div className="text-xl font-bold text-gray-700">{step.content.stats.boxes}</div>
          <div className="text-sm text-gray-600">en circulation</div>
        </div>
        <div className="bg-gray-50 p-4 rounded-lg">
          <div className="text-xl font-bold text-gray-700">{step.content.stats.reuse}</div>
          <div className="text-sm text-gray-600">r√©utilisations</div>
        </div>
        <div className="bg-gray-50 p-4 rounded-lg">
          <div className="text-xl font-bold text-gray-700">{step.content.stats.locations}</div>
          <div className="text-sm text-gray-600">points de collecte</div>
        </div>
      </div>
    </div>
  );
}

function PaymentStepContent({ step }: { step: any }) {
  return (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        {step.content.features.map((feature: any, index: number) => (
          <Card key={index} className="border-green-200">
            <CardHeader>
              <div className="flex items-center gap-3">
                <span className="text-2xl">{feature.icon}</span>
                <CardTitle className="text-lg">{feature.title}</CardTitle>
              </div>
            </CardHeader>
            <CardContent>
              <p className="text-sm text-gray-600">{feature.description}</p>
            </CardContent>
          </Card>
        ))}
      </div>
      
      <div className="bg-gray-50 p-6 rounded-lg">
        <h4 className="font-semibold text-gray-900 mb-4">S√©curit√© garantie :</h4>
        <ul className="grid grid-cols-2 gap-2">
          {step.content.security.map((item: string, index: number) => (
            <li key={index} className="flex items-center gap-2 text-gray-700">
              <Shield className="h-4 w-4 text-green-600" />
              {item}
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
}

function EnvironmentStepContent({ step }: { step: any }) {
  return (
    <div className="space-y-6">
      <div className="bg-green-50 p-6 rounded-lg">
        <h4 className="font-semibold text-green-900 mb-4">{step.content.calculator.title}</h4>
        <p className="text-green-700 mb-4">{step.content.calculator.description}</p>
        
        <div className="space-y-4">
          {step.content.metrics.map((metric: any, index: number) => (
            <div key={index} className="bg-white p-4 rounded border">
              <div className="font-medium text-gray-900 mb-2">{metric.title}</div>
              <div className="grid grid-cols-3 gap-4 text-sm">
                <div className="text-red-600">
                  Traditionnel: {metric.traditional}
                </div>
                <div className="text-green-600">
                  EcoDeli: {metric.ecodeli}
                </div>
                <div className="font-medium text-blue-600">
                  {metric.saving}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
      
      <div className="bg-blue-50 p-6 rounded-lg">
        <h4 className="font-semibold text-blue-900 mb-4">{step.content.gamification.title}</h4>
        <div className="grid grid-cols-2 gap-4">
          <div>
            <h5 className="font-medium mb-2">Niveaux :</h5>
            <ul className="space-y-1">
              {step.content.gamification.levels.map((level: string, index: number) => (
                <li key={index} className="flex items-center gap-2 text-blue-700">
                  <Star className="h-4 w-4" />
                  {level}
                </li>
              ))}
            </ul>
          </div>
          <div>
            <h5 className="font-medium mb-2">R√©compenses :</h5>
            <ul className="space-y-1">
              {step.content.gamification.rewards.map((reward: string, index: number) => (
                <li key={index} className="flex items-center gap-2 text-blue-700">
                  <CheckCircle className="h-4 w-4" />
                  {reward}
                </li>
              ))}
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
}

function CompletionStepContent({ step }: { step: any }) {
  return (
    <div className="space-y-6 text-center">
      <div className="text-6xl mb-4">üéâ</div>
      
      <div className="bg-green-50 p-6 rounded-lg">
        <h4 className="font-semibold text-green-900 mb-4">Comp√©tences acquises :</h4>
        <div className="grid grid-cols-2 gap-2">
          {step.content.achievements.map((achievement: string, index: number) => (
            <div key={index} className="text-green-700 text-sm">{achievement}</div>
          ))}
        </div>
      </div>
      
      <div className="bg-blue-50 p-6 rounded-lg">
        <h4 className="font-semibold text-blue-900 mb-4">Prochaines √©tapes :</h4>
        <div className="grid grid-cols-2 gap-2">
          {step.content.nextSteps.map((nextStep: string, index: number) => (
            <div key={index} className="text-blue-700 text-sm">{nextStep}</div>
          ))}
        </div>
      </div>
      
      <div className="bg-yellow-50 p-6 rounded-lg">
        <h4 className="font-semibold text-yellow-900 mb-4">Fonctionnalit√©s d√©bloqu√©es :</h4>
        <div className="grid grid-cols-2 gap-2">
          {step.content.unlocked.map((unlocked: string, index: number) => (
            <div key={index} className="text-yellow-700 text-sm">{unlocked}</div>
          ))}
        </div>
      </div>
    </div>
  );
}
