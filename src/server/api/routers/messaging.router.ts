import { router, protectedProcedure } from '@/server/api/trpc';\nimport { z } from 'zod';\n\nexport const messagingRouter = router({\n  getConversations: protectedProcedure\n    .query(async ({ ctx }) => {\n      // Récupérer les conversations de l'utilisateur\n    }),\n    \n  getMessages: protectedProcedure\n    .input(z.object({ conversationId: z.string() }))\n    .query(async ({ ctx, input }) => {\n      // Récupérer les messages d'une conversation\n    }),\n    \n  sendMessage: protectedProcedure\n    .input(z.object({\n      conversationId: z.string(),\n      content: z.string().min(1),\n    }))\n    .mutation(async ({ ctx, input }) => {\n      // Envoyer un message\n    }),\n    \n  createConversation: protectedProcedure\n    .input(z.object({\n      recipientId: z.string(),\n      initialMessage: z.string().optional(),\n    }))\n    .mutation(async ({ ctx, input }) => {\n      // Créer une nouvelle conversation\n    }),\n});