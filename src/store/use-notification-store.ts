import { create } from 'zustand';\n\ninterface NotificationState {\n  notifications: any[];\n  unreadCount: number;\n  addNotification: (notification: any) => void;\n  markAsRead: (id: string) => void;\n  clearAll: () => void;\n}\n\nexport const useNotificationStore = create<NotificationState>((set) => ({\n  notifications: [],\n  unreadCount: 0,\n  addNotification: (notification) => set((state) => ({\n    notifications: [notification, ...state.notifications],\n    unreadCount: state.unreadCount + 1\n  })),\n  markAsRead: (id) => set((state) => ({\n    notifications: state.notifications.map(n => n.id === id ? { ...n, read: true } : n),\n    unreadCount: Math.max(0, state.unreadCount - 1)\n  })),\n  clearAll: () => set({ notifications: [], unreadCount: 0 })\n}));