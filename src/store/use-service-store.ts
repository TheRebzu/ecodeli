import { create } from 'zustand';\n\ninterface ServiceState {\n  services: any[];\n  userServices: any[];\n  setServices: (services: any[]) => void;\n  setUserServices: (services: any[]) => void;\n  addService: (service: any) => void;\n  updateService: (id: string, updates: any) => void;\n}\n\nexport const useServiceStore = create<ServiceState>((set) => ({\n  services: [],\n  userServices: [],\n  setServices: (services) => set({ services }),\n  setUserServices: (services) => set({ userServices: services }),\n  addService: (service) => set((state) => ({\n    services: [...state.services, service]\n  })),\n  updateService: (id, updates) => set((state) => ({\n    services: state.services.map(s => s.id === id ? { ...s, ...updates } : s),\n    userServices: state.userServices.map(s => s.id === id ? { ...s, ...updates } : s)\n  })),\n}));