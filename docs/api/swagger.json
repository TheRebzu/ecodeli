<<<<<<< Updated upstream
=======
{
  "openapi": "3.0.0",
  "info": {
    "title": "EcoDeli API",
    "description": "API documentation for EcoDeli - A platform connecting individuals, merchants, and service providers for eco-friendly deliveries",
    "version": "1.0.0",
    "contact": {
      "name": "EcoDeli Support",
      "email": "support@ecodeli.me"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "trips",
      "description": "Planned trip operations"
    },
    {
      "name": "deliveries",
      "description": "Delivery operations"
    },
    {
      "name": "warehouses",
      "description": "Warehouse operations"
    }
  ],
  "paths": {
    "/trips": {
      "post": {
        "tags": ["trips"],
        "summary": "Create a new planned trip",
        "description": "Create a new planned trip as a delivery person",
        "operationId": "createTrip",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Trip information to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTripRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trip created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Trip"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only delivery persons can create trips",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Delivery person profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["trips"],
        "summary": "Retrieve all trips",
        "description": "Get all planned trips with filtering options",
        "operationId": "getTrips",
        "parameters": [
          {
            "name": "startCity",
            "in": "query",
            "description": "Filter by starting city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endCity",
            "in": "query",
            "description": "Filter by destination city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filter by date (ISO format)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "vehicleType",
            "in": "query",
            "description": "Filter by vehicle type",
            "schema": {
              "type": "string",
              "enum": ["CAR", "BIKE", "SCOOTER", "VAN", "TRUCK", "PUBLIC_TRANSPORT", "WALK"]
            }
          },
          {
            "name": "minSpace",
            "in": "query",
            "description": "Filter by minimum available space",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Trip"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/deliveries": {
      "post": {
        "tags": ["deliveries"],
        "summary": "Create a new delivery",
        "description": "Create a new delivery as a customer or merchant",
        "operationId": "createDelivery",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Delivery information to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeliveryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Delivery created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "delivery": {
                      "$ref": "#/components/schemas/Delivery"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["deliveries"],
        "summary": "Retrieve all deliveries",
        "description": "Get all deliveries with filtering and pagination options based on role",
        "operationId": "getDeliveries",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter by delivery status",
            "schema": {
              "type": "string",
              "enum": ["PENDING", "ACCEPTED", "PICKUP_IN_PROGRESS", "PICKED_UP", "IN_TRANSIT", "IN_STORAGE", "OUT_FOR_DELIVERY", "DELIVERED", "CANCELLED", "FAILED"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deliveries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Delivery"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/warehouses": {
      "post": {
        "tags": ["warehouses"],
        "summary": "Create a new warehouse",
        "description": "Create a new warehouse as an admin",
        "operationId": "createWarehouse",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Warehouse information to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Warehouse created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Warehouse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehouseErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehouseErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Only admins can create warehouses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehouseErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["warehouses"],
        "summary": "Retrieve all warehouses",
        "description": "Get all warehouses with filtering options",
        "operationId": "getWarehouses",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search term for warehouse name or city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Filter by city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Filter by active status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field to sort by",
            "schema": {
              "type": "string",
              "enum": ["name", "city", "capacity", "createdAt"]
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "asc"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "warehouses": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Warehouse"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/WarehousePagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehouseErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehouseErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Location": {
        "type": "object",
        "required": ["address", "city", "postalCode", "coordinates"],
        "properties": {
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "coordinates": {
            "type": "object",
            "required": ["lat", "lng"],
            "properties": {
              "lat": {
                "type": "number",
                "format": "double"
              },
              "lng": {
                "type": "number",
                "format": "double"
              }
            }
          }
        }
      },
      "CreateTripRequest": {
        "type": "object",
        "required": ["startLocation", "endLocation", "scheduledDate", "estimatedDepartureTime", "estimatedArrivalTime", "vehicleType", "availableSpace", "maxWeight"],
        "properties": {
          "startLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "endLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "waypoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          },
          "scheduledDate": {
            "type": "string",
            "format": "date"
          },
          "estimatedDepartureTime": {
            "type": "string",
            "format": "time"
          },
          "estimatedArrivalTime": {
            "type": "string",
            "format": "time"
          },
          "vehicleType": {
            "type": "string",
            "enum": ["CAR", "BIKE", "SCOOTER", "VAN", "TRUCK", "PUBLIC_TRANSPORT", "WALK"]
          },
          "availableSpace": {
            "type": "integer",
            "minimum": 1
          },
          "maxWeight": {
            "type": "number",
            "minimum": 0
          },
          "additionalNotes": {
            "type": "string"
          },
          "isRecurring": {
            "type": "boolean",
            "default": false
          },
          "recurringDays": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 6
            }
          }
        }
      },
      "DeliveryPerson": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "rating": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "transportType": {
            "type": "string",
            "enum": ["CAR", "BIKE", "SCOOTER", "VAN", "TRUCK", "PUBLIC_TRANSPORT", "WALK"]
          },
          "status": {
            "type": "string",
            "enum": ["AVAILABLE", "BUSY", "OFFLINE"]
          }
        }
      },
      "Trip": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "deliveryPersonId": {
            "type": "string"
          },
          "startLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "endLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "waypoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          },
          "scheduledDate": {
            "type": "string",
            "format": "date-time"
          },
          "estimatedDepartureTime": {
            "type": "string"
          },
          "estimatedArrivalTime": {
            "type": "string"
          },
          "vehicleType": {
            "type": "string",
            "enum": ["CAR", "BIKE", "SCOOTER", "VAN", "TRUCK", "PUBLIC_TRANSPORT", "WALK"]
          },
          "availableSpace": {
            "type": "integer"
          },
          "maxWeight": {
            "type": "number"
          },
          "additionalNotes": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["SCHEDULED", "IN_PROGRESS", "COMPLETED", "CANCELLED"]
          },
          "isRecurring": {
            "type": "boolean"
          },
          "recurringDays": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deliveryPerson": {
            "$ref": "#/components/schemas/DeliveryPerson"
          }
        }
      },
      "PackageItem": {
        "type": "object",
        "required": ["name", "quantity"],
        "properties": {
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "dimensions": {
            "type": "string"
          }
        }
      },
      "CreateDeliveryRequest": {
        "type": "object",
        "required": ["origin", "destination", "recipientName", "recipientPhone", "items", "packageSize", "packageWeight"],
        "properties": {
          "origin": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "recipientName": {
            "type": "string"
          },
          "recipientPhone": {
            "type": "string"
          },
          "recipientEmail": {
            "type": "string",
            "format": "email"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageItem"
            }
          },
          "packageSize": {
            "type": "string",
            "enum": ["SMALL", "MEDIUM", "LARGE", "EXTRA_LARGE"]
          },
          "packageWeight": {
            "type": "number",
            "minimum": 0
          },
          "isFragile": {
            "type": "boolean",
            "default": false
          },
          "deliveryInstructions": {
            "type": "string"
          },
          "isExpress": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "TrackingUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "deliveryId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "ACCEPTED", "PICKUP_IN_PROGRESS", "PICKED_UP", "IN_TRANSIT", "IN_STORAGE", "OUT_FOR_DELIVERY", "DELIVERED", "CANCELLED", "FAILED"]
          },
          "location": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Delivery": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "recipientName": {
            "type": "string"
          },
          "recipientPhone": {
            "type": "string"
          },
          "recipientEmail": {
            "type": "string",
            "format": "email"
          },
          "packageDetails": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PackageItem"
                }
              },
              "packageSize": {
                "type": "string",
                "enum": ["SMALL", "MEDIUM", "LARGE", "EXTRA_LARGE"]
              },
              "packageWeight": {
                "type": "number"
              },
              "isFragile": {
                "type": "boolean"
              }
            }
          },
          "deliveryInstructions": {
            "type": "string"
          },
          "estimatedDeliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "isExpress": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "ACCEPTED", "PICKUP_IN_PROGRESS", "PICKED_UP", "IN_TRANSIT", "IN_STORAGE", "OUT_FOR_DELIVERY", "DELIVERED", "CANCELLED", "FAILED"]
          },
          "trackingNumber": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "customerId": {
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          },
          "deliveryPersonId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "user": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "merchant": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "user": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "deliveryPerson": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "string"
              },
              "user": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "trackingUpdates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingUpdate"
            }
          }
        }
      },
      "WarehouseHour": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "warehouseId": {
            "type": "string"
          },
          "dayOfWeek": {
            "type": "integer",
            "minimum": 0,
            "maximum": 6
          },
          "openTime": {
            "type": "string"
          },
          "closeTime": {
            "type": "string"
          }
        }
      },
      "CreateWarehouseRequest": {
        "type": "object",
        "required": ["name", "address", "city", "postalCode", "country", "capacity"],
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "coordinates": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "format": "double"
              },
              "lng": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "capacity": {
            "type": "integer",
            "minimum": 1
          },
          "contactPhone": {
            "type": "string"
          }
        }
      },
      "Warehouse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "coordinates": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "format": "double"
              },
              "lng": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "capacity": {
            "type": "integer"
          },
          "availableBoxes": {
            "type": "integer"
          },
          "contactPhone": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "openingHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseHour"
            }
          },
          "_count": {
            "type": "object",
            "properties": {
              "storageBoxes": {
                "type": "integer"
              }
            }
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "pages": {
            "type": "integer"
          }
        }
      },
      "WarehousePagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalCount": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "hasPrevPage": {
            "type": "boolean"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "details": {
            "type": "object"
          }
        }
      },
      "WarehouseErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [false]
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "details": {
                "type": "object"
              }
            }
          }
        }
      }
    }
  }
} 
>>>>>>> Stashed changes
