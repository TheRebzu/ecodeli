
> ecodeli@0.1.0 dev C:\Users\Amine\WebstormProjects\ecodeli
> next dev

   ‚ñ≤ Next.js 15.3.4
   - Local:        http://localhost:3000
   - Network:      http://26.8.108.82:3000
   - Environments: .env.local, .env

 ‚úì Starting...
 ‚úì Ready in 8.8s
 ‚óã Compiling /middleware ...
 ‚úì Compiled /middleware in 2.6s (597 modules)
 ‚óã Compiling /[locale]/login ...
 ‚úì Compiled /api/client/dashboard in 31.7s (1622 modules)
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
[API] No valid session found
‚ùå [API Dashboard] Acc√®s refus√© - R√¥le: undefined
 GET /api/client/dashboard 403 in 23639ms
 GET /fr/login 200 in 33963ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
[API] No valid session found
‚ùå [API Dashboard] Acc√®s refus√© - R√¥le: undefined
 GET /api/client/dashboard 403 in 118ms
 ‚óã Compiling /api/auth/[...all] ...
 ‚úì Compiled /api/auth/[...all] in 2.8s (1620 modules)
 ‚óã Compiling /api/health ...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 7226ms
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."email" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Account"."id", "public"."Account"."accountId", "public"."Account"."providerId", "public"."Account"."userId", "public"."Account"."accessToken", "public"."Account"."refreshToken", "public"."Account"."idToken", "public"."Account"."accessTokenExpiresAt", "public"."Account"."refreshTokenExpiresAt", "public"."Account"."scope", "public"."Account"."password", "public"."Account"."createdAt", "public"."Account"."updatedAt" FROM "public"."Account" WHERE "public"."Account"."userId" = $1 ORDER BY "public"."Account"."id" ASC LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Session" ("id","expiresAt","token","createdAt","updatedAt","ipAddress","userAgent","userId") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId"
 POST /api/auth/sign-in/email 200 in 9973ms
 ‚úì Compiled /[locale]/client in 12.1s (1636 modules)
 ‚úì Compiled in 5.8s (2882 modules)
 GET /api/health 200 in 19790ms
prisma:query SELECT 1
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."email" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Account"."id", "public"."Account"."accountId", "public"."Account"."providerId", "public"."Account"."userId", "public"."Account"."accessToken", "public"."Account"."refreshToken", "public"."Account"."idToken", "public"."Account"."accessTokenExpiresAt", "public"."Account"."refreshTokenExpiresAt", "public"."Account"."scope", "public"."Account"."password", "public"."Account"."createdAt", "public"."Account"."updatedAt" FROM "public"."Account" WHERE "public"."Account"."userId" = $1 ORDER BY "public"."Account"."id" ASC LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Session" ("id","expiresAt","token","createdAt","updatedAt","ipAddress","userAgent","userId") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId"
 POST /api/auth/sign-in/email 200 in 12265ms
 GET /fr/client 200 in 12205ms
 ‚óã Compiling /api/auth/check-user-status ...
 GET /fr/login 200 in 11849ms
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 ‚úì Compiled /api/auth/check-user-status in 8.9s (2898 modules)
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
[API] No valid session found
‚ùå [API Dashboard] Acc√®s refus√© - R√¥le: undefined
 GET /api/client/dashboard 403 in 3347ms
prisma:error 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    email: "client-complete@test.com"
  },
  select: {
    id: true,
    email: true,
    emailVerified: true,
    role: true,
    isActive: true,
    validationStatus: true,
    name: true,
    createdAt: true,
    profile: true,
    client: true,
    deliverer: {
      select: {
        documentsValidated: true,
        ~~~~~~~~~~~~~~~~~~
        vehicleInfo: true,
        isAvailable: true,
?       id?: true,
?       userId?: true,
?       validationStatus?: true,
?       vehicleType?: true,
?       licensePlate?: true,
?       maxWeight?: true,
?       maxVolume?: true,
?       averageRating?: true,
?       totalDeliveries?: true,
?       isActive?: true,
?       nfcCardId?: true,
?       activatedAt?: true,
?       lastActiveAt?: true,
?       coordinates?: true,
?       createdAt?: true,
?       updatedAt?: true,
?       user?: true,
?       routes?: true,
?       delivererAvailabilities?: true,
?       trackingSessions?: true,
?       currentLocation?: true,
?       NFCCard?: true,
?       Availability?: true,
?       DelivererCertification?: true,
?       _count?: true
      }
    },
    provider: {
      select: {
        businessName: true,
        certifications: true
      }
    },
    merchant: {
      select: {
        businessName: true,
        siret: true
      }
    }
  }
}

Unknown field `documentsValidated` for select statement on model `Deliverer`. Available options are marked with ?.
 POST /api/auth/check-user-status 500 in 11313ms
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 11661ms
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 217ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 230ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
 ‚óã Compiling /api/test-auth ...
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 1289ms
 ‚úì Compiled /api/test-auth in 17.3s (2900 modules)
üîç [API] V√©rification session Better-Auth...
[API] No valid session found
 GET /api/test-auth 200 in 17826ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 17410ms
 GET /fr/client 200 in 9446ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 122ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 79ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 131ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 127ms
 ‚úì Compiled in 3.7s (1061 modules)
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 439ms
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 157ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 174ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 296ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 221ms
 ‚úì Compiled in 4.1s (1061 modules)
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 548ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 275ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 177ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 335ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 210ms
 ‚úì Compiled in 6.8s (1061 modules)
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 1613ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 208ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 356ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 359ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 277ms
 ‚úì Compiled in 5.4s (1061 modules)
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 1131ms
 ‚úì Compiled in 4.3s (1061 modules)
 ‚úì Compiled in 3.7s (1061 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 118ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 80ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 101ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 100ms
 ‚úì Compiled in 3.6s (1061 modules)
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 360ms
 ‚úì Compiled in 19.9s (3491 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 656ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 212ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 220ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 162ms
 ‚úì Compiled in 4s (1061 modules)
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 1393ms
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 108ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 80ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 112ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 92ms
 ‚úì Compiled in 3.5s (1061 modules)
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 761ms
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 127ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 108ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT 1
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 116ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 127ms
 ‚úì Compiled in 3.5s (1061 modules)
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 300ms
 ‚úì Compiled in 10.4s (3491 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 5434ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 192ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
 GET /fr/client 200 in 677ms
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT 1
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 194ms
üîç [API Dashboard] D√©but r√©cup√©ration dashboard client...
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
‚úÖ [API Dashboard] Utilisateur valide: client-complete@test.com
üîç [DashboardService] R√©cup√©ration donn√©es client: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
‚úÖ [API Dashboard] Donn√©es assembl√©es avec succ√®s
üìä [API Dashboard] Stats: {
  announcements: 0,
  activeDeliveries: 0,
  subscription: 'FREE',
  tutorialCompleted: false
}
 GET /api/client/dashboard 200 in 144ms
 ‚úì Compiled in 9.7s (3491 modules)
 ‚úì Compiled in 11s (3491 modules)
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 12146ms
 ‚óã Compiling /_not-found ...
 ‚úì Compiled /_not-found in 9.7s (2898 modules)
 GET /api/auth/get-session 404 in 6708ms
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 653ms
 GET /fr/client 200 in 1444ms
 GET /fr/login 200 in 764ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 135ms
 ‚úì Compiled in 7.8s (2898 modules)
 GET /fr/login 200 in 375ms
 ‚úì Compiled in 4.7s (2881 modules)
 GET /fr/login 200 in 622ms
 ‚úì Compiled in 3.8s (1064 modules)
 GET /fr/login 200 in 778ms
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."email" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Account"."id", "public"."Account"."accountId", "public"."Account"."providerId", "public"."Account"."userId", "public"."Account"."accessToken", "public"."Account"."refreshToken", "public"."Account"."idToken", "public"."Account"."accessTokenExpiresAt", "public"."Account"."refreshTokenExpiresAt", "public"."Account"."scope", "public"."Account"."password", "public"."Account"."createdAt", "public"."Account"."updatedAt" FROM "public"."Account" WHERE "public"."Account"."userId" = $1 ORDER BY "public"."Account"."id" ASC LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Session" ("id","expiresAt","token","createdAt","updatedAt","ipAddress","userAgent","userId") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId"
 POST /api/auth/sign-in/email 200 in 4199ms
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 1061ms
 ‚úì Compiled in 8s (2881 modules)
 GET /api/auth/get-session 404 in 5124ms
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 377ms
 GET /fr/client 200 in 948ms
 GET /fr/login 200 in 1058ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 131ms
prisma:query SELECT 1
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."email" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Account"."id", "public"."Account"."accountId", "public"."Account"."providerId", "public"."Account"."userId", "public"."Account"."accessToken", "public"."Account"."refreshToken", "public"."Account"."idToken", "public"."Account"."accessTokenExpiresAt", "public"."Account"."refreshTokenExpiresAt", "public"."Account"."scope", "public"."Account"."password", "public"."Account"."createdAt", "public"."Account"."updatedAt" FROM "public"."Account" WHERE "public"."Account"."userId" = $1 ORDER BY "public"."Account"."id" ASC LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Session" ("id","expiresAt","token","createdAt","updatedAt","ipAddress","userAgent","userId") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId"
 POST /api/auth/sign-in/email 200 in 4013ms
 ‚úì Compiled in 8.4s (1064 modules)
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 ‚úì Compiled in 4.5s (1064 modules)
 GET /fr/login 200 in 1131ms
 GET /fr/client 200 in 8017ms
 ‚úì Compiled in 3.9s (1064 modules)
 ‚úì Compiled in 3.6s (1064 modules)
 ‚úì Compiled in 3.5s (1064 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 283ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 340ms
 ‚óã Compiling /api/client/dashboard ...
 ‚úì Compiled /api/client/dashboard in 1388ms (1834 modules)
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
 GET /api/client/dashboard 200 in 2807ms
 GET /fr/client 200 in 864ms
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
 GET /api/client/dashboard 200 in 320ms
 ‚úì Compiled in 12s (2897 modules)
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 8602ms
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 327ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 127ms
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
 GET /api/client/dashboard 200 in 192ms
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
üìä [DashboardService] Calcul statistiques pour: 5L5kRCtgy01AUBMzHv8RdZAeg1wGEDeH
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT 1
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
 GET /api/client/dashboard 200 in 167ms
 ‚úì Compiled in 9.9s (2894 modules)
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 7021ms
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 468ms
 ‚úì Compiled in 9.2s (2894 modules)
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 6988ms
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
 GET /api/client/dashboard 200 in 5545ms
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
 GET /api/client/dashboard 200 in 381ms
 GET /fr/client 200 in 531ms
 ‚úì Compiled in 3.9s (1061 modules)
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 612ms
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 303ms
 ‚úì Compiled in 8.3s (2894 modules)
 ‚úì Compiled in 3ms (1833 modules)
 ‚úì Compiled in 1ms (1833 modules)
 ‚úì Compiled in 1ms (1833 modules)
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 7745ms
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
 GET /api/client/dashboard 200 in 3878ms
 ‚úì Compiled in 5s (2894 modules)
üîç [API] V√©rification session Better-Auth...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
 GET /api/client/dashboard 200 in 6213ms
 GET /fr/client 200 in 9322ms
üîç [ClientLayout] Auth state: { user: undefined, isLoading: true, isAuthenticated: false }
 GET /fr/client 200 in 1440ms
 ‚úì Compiled in 4.1s (1061 modules)
 ‚úì Compiled in 8.7s (2894 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 3446ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
 GET /api/auth/get-session 200 in 658ms
 GET /fr/client 200 in 981ms
V√©rification session...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
 GET /api/client/dashboard 200 in 190ms
V√©rification session...
prisma:query SELECT "public"."Session"."id", "public"."Session"."expiresAt", "public"."Session"."token", "public"."Session"."createdAt", "public"."Session"."updatedAt", "public"."Session"."ipAddress", "public"."Session"."userAgent", "public"."Session"."userId" FROM "public"."Session" WHERE "public"."Session"."token" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" = $1 LIMIT $2 OFFSET $3
[API] Valid session for: client-complete@test.com - Role: CLIENT
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE "public"."Client"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Client"."id", "public"."Client"."userId", "public"."Client"."subscriptionPlan"::text, "public"."Client"."subscriptionStart", "public"."Client"."subscriptionEnd", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."termsAcceptedAt", "public"."Client"."emailNotifications", "public"."Client"."pushNotifications", "public"."Client"."smsNotifications", "public"."Client"."createdAt", "public"."Client"."updatedAt" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."emailVerifiedAt", "public"."User"."name", "public"."User"."image", "public"."User"."role"::text, "public"."User"."isActive", "public"."User"."validationStatus"::text, "public"."User"."profileId", "public"."User"."language", "public"."User"."lastLoginAt", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."userId", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."avatar", "public"."Profile"."dateOfBirth", "public"."Profile"."address", "public"."Profile"."city", "public"."Profile"."postalCode", "public"."Profile"."country", "public"."Profile"."isVerified", "public"."Profile"."verifiedAt", "public"."Profile"."language", "public"."Profile"."timezone", "public"."Profile"."createdAt", "public"."Profile"."updatedAt" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT SUM("amount") FROM (SELECT "public"."Payment"."amount" FROM "public"."Payment" WHERE ("public"."Payment"."userId" = $1 AND "public"."Payment"."status" = CAST($2::text AS "public"."PaymentStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT AVG("rating") FROM (SELECT "public"."Review"."rating" FROM "public"."Review" WHERE "public"."Review"."clientId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."subscriptionPlan"::text FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Notification"."id", "public"."Notification"."userId", "public"."Notification"."type", "public"."Notification"."title", "public"."Notification"."message", "public"."Notification"."data", "public"."Notification"."isRead", "public"."Notification"."readAt", "public"."Notification"."isPush", "public"."Notification"."pushSentAt", "public"."Notification"."createdAt" FROM "public"."Notification" WHERE "public"."Notification"."userId" = $1 ORDER BY "public"."Notification"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" = CAST($2::text AS "public"."DeliveryStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Client"."id", "public"."Client"."tutorialCompleted", "public"."Client"."tutorialCompletedAt", "public"."Client"."userId" FROM "public"."Client" WHERE ("public"."Client"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Delivery"."id" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."User"."id" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Profile"."id", "public"."Profile"."firstName", "public"."Profile"."lastName", "public"."Profile"."phone", "public"."Profile"."userId" FROM "public"."Profile" WHERE "public"."Profile"."userId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Announcement"."id" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 OFFSET $2) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."StorageBoxRental"."id" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."clientId" = $1 AND "public"."Booking"."createdAt" >= $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."StorageBoxRental"."id", "public"."StorageBoxRental"."clientId", "public"."StorageBoxRental"."storageBoxId", "public"."StorageBoxRental"."startDate", "public"."StorageBoxRental"."endDate", "public"."StorageBoxRental"."accessCode", "public"."StorageBoxRental"."totalPrice", "public"."StorageBoxRental"."isPaid", "public"."StorageBoxRental"."createdAt", "public"."StorageBoxRental"."updatedAt", "public"."StorageBoxRental"."userId" FROM "public"."StorageBoxRental" WHERE ("public"."StorageBoxRental"."clientId" = $1 AND "public"."StorageBoxRental"."endDate" >= $2) ORDER BY "public"."StorageBoxRental"."id" ASC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Announcement"."id", "public"."Announcement"."title", "public"."Announcement"."description", "public"."Announcement"."type"::text, "public"."Announcement"."status"::text, "public"."Announcement"."authorId", "public"."Announcement"."delivererId", "public"."Announcement"."pickupAddress", "public"."Announcement"."pickupLatitude", "public"."Announcement"."pickupLongitude", "public"."Announcement"."deliveryAddress", "public"."Announcement"."deliveryLatitude", "public"."Announcement"."deliveryLongitude", "public"."Announcement"."distance", "public"."Announcement"."pickupDate", "public"."Announcement"."deliveryDate", "public"."Announcement"."isFlexibleDate", "public"."Announcement"."preferredTimeSlot", "public"."Announcement"."isUrgent", "public"."Announcement"."basePrice", "public"."Announcement"."finalPrice", "public"."Announcement"."currency", "public"."Announcement"."isPriceNegotiable", "public"."Announcement"."urgencyFee", "public"."Announcement"."insuranceFee", "public"."Announcement"."platformFee", "public"."Announcement"."packageDetails", "public"."Announcement"."personDetails", "public"."Announcement"."shoppingDetails", "public"."Announcement"."petDetails", "public"."Announcement"."serviceDetails", "public"."Announcement"."requiresValidation", "public"."Announcement"."requiresInsurance", "public"."Announcement"."allowsPartialDelivery", "public"."Announcement"."maxDeliverers", "public"."Announcement"."recurringConfig", "public"."Announcement"."estimatedDuration", "public"."Announcement"."weight", "public"."Announcement"."volume", "public"."Announcement"."specialInstructions", "public"."Announcement"."customerNotes", "public"."Announcement"."internalNotes", "public"."Announcement"."viewCount", "public"."Announcement"."matchCount", "public"."Announcement"."expiresAt", "public"."Announcement"."publishedAt", "public"."Announcement"."createdAt", "public"."Announcement"."updatedAt", "public"."Announcement"."clientId", "public"."Announcement"."merchantId" FROM "public"."Announcement" WHERE "public"."Announcement"."authorId" = $1 ORDER BY "public"."Announcement"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Delivery"."id", "public"."Delivery"."announcementId", "public"."Delivery"."clientId", "public"."Delivery"."delivererId", "public"."Delivery"."status"::text, "public"."Delivery"."trackingNumber", "public"."Delivery"."validationCode", "public"."Delivery"."pickupDate", "public"."Delivery"."deliveryDate", "public"."Delivery"."actualDeliveryDate", "public"."Delivery"."isPartial", "public"."Delivery"."currentLocation", "public"."Delivery"."price", "public"."Delivery"."delivererFee", "public"."Delivery"."platformFee", "public"."Delivery"."insuranceFee", "public"."Delivery"."createdAt", "public"."Delivery"."updatedAt" FROM "public"."Delivery" LEFT JOIN "public"."Announcement" AS "j0" ON ("j0"."id") = ("public"."Delivery"."announcementId") WHERE (("j0"."authorId" = $1 AND ("j0"."id" IS NOT NULL)) AND "public"."Delivery"."status" IN (CAST($2::text AS "public"."DeliveryStatus"),CAST($3::text AS "public"."DeliveryStatus"),CAST($4::text AS "public"."DeliveryStatus"))) ORDER BY "public"."Delivery"."id" ASC LIMIT $5 OFFSET $6
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clientId", "public"."Booking"."providerId", "public"."Booking"."serviceId", "public"."Booking"."status", "public"."Booking"."scheduledDate", "public"."Booking"."scheduledTime", "public"."Booking"."duration", "public"."Booking"."address", "public"."Booking"."totalPrice", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."userId" FROM "public"."Booking" WHERE "public"."Booking"."clientId" = $1 ORDER BY "public"."Booking"."createdAt" DESC LIMIT $2