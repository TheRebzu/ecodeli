# =============================================================================
# CONFIGURATION PROMETHEUS POUR ECODELI
# =============================================================================

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'ecodeli-monitor'
    environment: 'production'

# Configuration des règles d'alerte
rule_files:
  - "alert-rules.yml"

# Configuration Alertmanager
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Configuration des cibles de scraping
scrape_configs:
  # Prometheus lui-même
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # Application Web Next.js
  - job_name: 'ecodeli-web'
    static_configs:
      - targets: ['web:3000']
    metrics_path: '/api/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s
    scheme: http
    params:
      format: ['prometheus']

  # Application Desktop Java
  - job_name: 'ecodeli-desktop'
    static_configs:
      - targets: ['desktop:8080']
    metrics_path: '/metrics'
    scrape_interval: 60s
    scrape_timeout: 15s

  # Base de données PostgreSQL
  - job_name: 'postgresql'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # Redis
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # Nginx
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:80']
    metrics_path: '/nginx_status'
    scrape_interval: 30s

  # Node Exporter (métriques système)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  # Cadvisor (métriques Docker)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s

  # Exporteur personnalisé pour métriques business
  - job_name: 'ecodeli-business-metrics'
    static_configs:
      - targets: ['web:3000']
    metrics_path: '/api/metrics/business'
    scrape_interval: 60s
    scheme: http
    params:
      format: ['prometheus']

# Configuration du stockage
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    path: /prometheus
    wal-compression: true

# Configuration remote write (pour backup vers un service externe - optionnel)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint.example.com/write"
#     basic_auth:
#       username: "ecodeli"
#       password: "password"