import { db } from '../src/lib/db'

async function fixProviderProfile() {
  try {
    console.log('üîç V√©rification du profil prestataire...')
    
    // ID de l'utilisateur prestataire depuis les logs
    const userId = 'cmcuheo96001oplmo347aa2f6'
    
    // V√©rifier si l'utilisateur existe
    const user = await db.user.findUnique({
      where: { id: userId },
      include: { profile: true }
    })
    
    if (!user) {
      console.log('‚ùå Utilisateur non trouv√©:', userId)
      return
    }
    
    console.log('‚úÖ Utilisateur trouv√©:', {
      id: user.id,
      email: user.email,
      role: user.role
    })
    
    // V√©rifier si le profil Provider existe
    const provider = await db.provider.findUnique({
      where: { userId: userId }
    })
    
    if (provider) {
      console.log('‚úÖ Profil Provider existe d√©j√†:', provider.id)
      return
    }
    
    console.log('‚ùå Profil Provider manquant, cr√©ation...')
    
    // Cr√©er le profil Provider
    const newProvider = await db.provider.create({
      data: {
        userId: userId,
        businessName: `Prestataire ${user.profile?.firstName || user.email}`,
        specialties: ['HOME_SERVICE'],
        hourlyRate: 25.0,
        description: 'Prestataire de services √† domicile',
        validationStatus: 'APPROVED', // Auto-approuv√© pour les tests
        isActive: true,
        activatedAt: new Date()
      }
    })
    
    console.log('‚úÖ Profil Provider cr√©√©:', newProvider.id)
    
    // Cr√©er un service par d√©faut
    const service = await db.service.create({
      data: {
        providerId: newProvider.id,
        name: 'Service √† domicile',
        description: 'Service de base √† domicile',
        type: 'HOME_SERVICE',
        basePrice: 25.0,
        priceUnit: 'HOUR',
        duration: 60,
        isActive: true,
        requirements: ['INSURANCE']
      }
    })
    
    console.log('‚úÖ Service cr√©√©:', service.id)
    
  } catch (error) {
    console.error('‚ùå Erreur:', error)
  } finally {
    await db.$disconnect()
  }
}

fixProviderProfile() 