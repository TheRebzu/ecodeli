# Script PowerShell pour tester Better-Auth EcoDeli

Write-Host "üîß Test Better-Auth EcoDeli..." -ForegroundColor Green

# 1. Fusionner et g√©n√©rer Prisma
Write-Host "üì¶ G√©n√©ration Prisma..." -ForegroundColor Yellow
pnpm run prisma:merge
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Sch√©ma fusionn√©" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erreur fusion sch√©ma" -ForegroundColor Red
    exit 1
}

pnpm run db:generate
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Prisma g√©n√©r√©" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erreur g√©n√©ration Prisma" -ForegroundColor Red
    exit 1
}

# 2. Push vers la base de donn√©es
Write-Host "üóÑÔ∏è Mise √† jour base de donn√©es..." -ForegroundColor Yellow
pnpm run db:push
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Base de donn√©es mise √† jour" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erreur mise √† jour DB" -ForegroundColor Red
    exit 1
}

# 3. D√©marrer le serveur en arri√®re-plan pour les tests
Write-Host "üöÄ D√©marrage serveur de test..." -ForegroundColor Yellow
$job = Start-Job -ScriptBlock { 
    Set-Location "C:\Users\Amine\WebstormProjects\ecodeli"
    pnpm dev 
}

# Attendre que le serveur d√©marre
Start-Sleep -Seconds 15

# 4. Tester les endpoints
Write-Host "üß™ Test des endpoints..." -ForegroundColor Yellow

try {
    # Test health
    $health = Invoke-RestMethod -Uri "http://localhost:3000/api/health" -Method GET -TimeoutSec 5
    Write-Host "‚úÖ /api/health accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå /api/health inaccessible: $($_.Exception.Message)" -ForegroundColor Red
}

try {
    # Test session
    $session = Invoke-RestMethod -Uri "http://localhost:3000/api/auth/session" -Method GET -TimeoutSec 5
    Write-Host "‚úÖ /api/auth/session accessible" -ForegroundColor Green
} catch {
    Write-Host "‚úÖ /api/auth/session accessible (401 attendu sans session)" -ForegroundColor Green
}

# 5. Test inscription
Write-Host "üìù Test inscription utilisateur..." -ForegroundColor Yellow
$registerData = @{
    email = "test@ecodeli.local"
    password = "Test123!"
    name = "Test User"
    role = "CLIENT"
} | ConvertTo-Json

try {
    $register = Invoke-RestMethod -Uri "http://localhost:3000/api/auth/sign-up" -Method POST -Body $registerData -ContentType "application/json" -TimeoutSec 10
    Write-Host "‚úÖ Inscription r√©ussie" -ForegroundColor Green
    Write-Host "User ID: $($register.user.id)" -ForegroundColor Cyan
} catch {
    Write-Host "‚ö†Ô∏è Test inscription: $($_.Exception.Message)" -ForegroundColor Yellow
}

# 6. Test connexion
Write-Host "üîê Test connexion utilisateur..." -ForegroundColor Yellow
$loginData = @{
    email = "test@ecodeli.local"
    password = "Test123!"
} | ConvertTo-Json

try {
    $login = Invoke-RestMethod -Uri "http://localhost:3000/api/auth/sign-in" -Method POST -Body $loginData -ContentType "application/json" -TimeoutSec 10
    Write-Host "‚úÖ Connexion r√©ussie" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Test connexion: $($_.Exception.Message)" -ForegroundColor Yellow
}

# 7. Nettoyer
Write-Host "üßπ Nettoyage..." -ForegroundColor Yellow
Stop-Job -Job $job
Remove-Job -Job $job

Write-Host "" 
Write-Host "üéâ Tests Better-Auth termin√©s!" -ForegroundColor Green
Write-Host "üìã Pour continuer le d√©veloppement:" -ForegroundColor Cyan
Write-Host "  1. pnpm dev" -ForegroundColor White
Write-Host "  2. Tester sur http://localhost:3000" -ForegroundColor White
Write-Host "  3. Endpoints disponibles:" -ForegroundColor White
Write-Host "     - POST /api/auth/sign-up" -ForegroundColor Gray
Write-Host "     - POST /api/auth/sign-in" -ForegroundColor Gray
Write-Host "     - GET /api/auth/session" -ForegroundColor Gray
Write-Host "     - POST /api/auth/sign-out" -ForegroundColor Gray