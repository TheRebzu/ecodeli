#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîç V√©rification finale rapide du projet EcoDeli...\n');

// 1. V√©rifier les pages principales
const pagesToCheck = [
  'src/app/[locale]/(protected)/admin/page.tsx',
  'src/app/[locale]/(protected)/provider/billing/page.tsx', 
  'src/app/[locale]/(protected)/provider/services/page.tsx',
  'src/app/[locale]/(protected)/deliverer/page.tsx',
  'src/app/[locale]/(protected)/client/page.tsx',
  'src/app/[locale]/(protected)/merchant/catalog/page.tsx'
];

console.log('üìÑ V√©rification des pages principales:');
let pagesOk = 0;
pagesToCheck.forEach(pagePath => {
  if (fs.existsSync(pagePath)) {
    console.log(`  ‚úÖ ${pagePath}`);
    pagesOk++;
  } else {
    console.log(`  ‚ùå ${pagePath} - MANQUANT`);
  }
});

// 2. V√©rifier les composants essentiels
const componentsToCheck = [
  'src/components/admin/dashboard/admin-dashboard.tsx',
  'src/components/provider/billing/earnings-summary.tsx',
  'src/components/provider/billing/monthly-invoice.tsx',
  'src/components/provider/services/service-card.tsx',
  'src/components/deliverer/dashboard/deliverer-dashboard.tsx',
  'src/components/client/dashboard/client-dashboard.tsx',
  'src/components/merchant/catalog/catalog-page.tsx'
];

console.log('\nüß© V√©rification des composants essentiels:');
let componentsOk = 0;
componentsToCheck.forEach(componentPath => {
  if (fs.existsSync(componentPath)) {
    console.log(`  ‚úÖ ${componentPath}`);
    componentsOk++;
  } else {
    console.log(`  ‚ùå ${componentPath} - MANQUANT`);
  }
});

// 3. V√©rifier les hooks
const hooksToCheck = [
  'src/hooks/provider/use-provider-services.ts',
  'src/hooks/provider/use-provider-monthly-billing.ts',
  'src/hooks/client/use-client-contracts.ts',
  'src/hooks/client/use-client-reviews.ts',
  'src/hooks/use-toast.ts'
];

console.log('\nüé£ V√©rification des hooks:');
let hooksOk = 0;
hooksToCheck.forEach(hookPath => {
  if (fs.existsSync(hookPath)) {
    console.log(`  ‚úÖ ${hookPath}`);
    hooksOk++;
  } else {
    console.log(`  ‚ùå ${hookPath} - MANQUANT`);
  }
});

// 4. V√©rifier les routeurs API essentiels
const routersToCheck = [
  'src/server/api/routers/admin/admin-analytics.router.ts',
  'src/server/api/routers/admin/admin-system.router.ts',
  'src/server/api/routers/merchant/merchant-dashboard.router.ts'
];

console.log('\nüõ£Ô∏è  V√©rification des routeurs API:');
let routersOk = 0;
routersToCheck.forEach(routerPath => {
  if (fs.existsSync(routerPath)) {
    console.log(`  ‚úÖ ${routerPath}`);
    routersOk++;
  } else {
    console.log(`  ‚ùå ${routerPath} - MANQUANT`);
  }
});

// 5. R√©sum√© final
console.log('\nüìä R√âSUM√â FINAL:');
console.log(`  üìÑ Pages principales: ${pagesOk}/${pagesToCheck.length}`);
console.log(`  üß© Composants essentiels: ${componentsOk}/${componentsToCheck.length}`);
console.log(`  üé£ Hooks: ${hooksOk}/${hooksToCheck.length}`);
console.log(`  üõ£Ô∏è  Routeurs API: ${routersOk}/${routersToCheck.length}`);

const totalChecked = pagesToCheck.length + componentsToCheck.length + hooksToCheck.length + routersToCheck.length;
const totalOk = pagesOk + componentsOk + hooksOk + routersOk;
const percentage = Math.round((totalOk / totalChecked) * 100);

console.log(`\nüéØ SCORE GLOBAL: ${totalOk}/${totalChecked} (${percentage}%)`);

if (percentage >= 95) {
  console.log('\nüéâ EXCELLENT! Le projet est complet et pr√™t!');
} else if (percentage >= 80) {
  console.log('\n‚úÖ BIEN! Quelques √©l√©ments mineurs √† compl√©ter.');
} else {
  console.log('\n‚ö†Ô∏è  ATTENTION! Plusieurs √©l√©ments importants manquent.');
}

console.log('\n‚ú® V√©rification termin√©e!\n');