#!/bin/bash

# Script de test avec cookie de session
# Usage: ./test-with-cookie.sh "VOTRE_COOKIE_VALUE"

if [ -z "$1" ]; then
  echo "‚ùå Usage: $0 <session-token>"
  echo "üìñ Exemple: $0 'eyJhbGciOiJIUzI1NiJ9...'"
  echo ""
  echo "üîß Pour extraire le cookie:"
  echo "  1. Allez sur http://localhost:3000/fr/login"
  echo "  2. Connectez-vous avec: jean.dupont@orange.fr / password123"
  echo "  3. F12 > Application > Cookies > next-auth.session-token"
  echo "  4. Copiez la valeur et relancez ce script"
  exit 1
fi

COOKIE="next-auth.session-token=$1"
USER_AGENT="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"

echo "üß™ Test des pages avec authentification..."
echo "üç™ Cookie: ${1:0:50}..."
echo

# Test de connectivit√©
echo "üì° Test de connectivit√©..."
if ! curl -s -f http://localhost:3000/api/health > /dev/null; then
  echo "‚ùå Application non accessible. D√©marrez avec: pnpm dev"
  exit 1
fi
echo "‚úÖ Application accessible"
echo

# Test page client
echo "üìã Test page client:"
RESPONSE=$(curl -s -H "Cookie: $COOKIE" -H "User-Agent: $USER_AGENT" \
     http://localhost:3000/fr/client)

if echo "$RESPONSE" | grep -q -i "tableau de bord\|dashboard\|client"; then
  echo "‚úÖ Page client OK - Utilisateur authentifi√©"
elif echo "$RESPONSE" | grep -q -i "login\|connexion"; then
  echo "‚ùå Page client KO - Redirection vers login (cookie invalide?)"
else
  echo "‚ö†Ô∏è  Page client - R√©ponse inattendue"
fi

# Test page annonces
echo "üìã Test page annonces:"
RESPONSE=$(curl -s -H "Cookie: $COOKIE" -H "User-Agent: $USER_AGENT" \
     http://localhost:3000/fr/client/announcements)

if echo "$RESPONSE" | grep -q -i "annonce\|cr√©er"; then
  echo "‚úÖ Page annonces OK"
elif echo "$RESPONSE" | grep -q -i "login\|connexion"; then
  echo "‚ùå Page annonces KO - Redirection vers login"
else
  echo "‚ö†Ô∏è  Page annonces - R√©ponse inattendue"
fi

# Test page cr√©ation
echo "üìã Test page cr√©ation:"
RESPONSE=$(curl -s -H "Cookie: $COOKIE" -H "User-Agent: $USER_AGENT" \
     http://localhost:3000/fr/client/announcements/create)

if echo "$RESPONSE" | grep -q -i "cr√©er\|annonce\|formulaire"; then
  echo "‚úÖ Page cr√©ation OK"
elif echo "$RESPONSE" | grep -q -i "login\|connexion"; then
  echo "‚ùå Page cr√©ation KO - Redirection vers login"
else
  echo "‚ö†Ô∏è  Page cr√©ation - R√©ponse inattendue"
fi

# Test des erreurs JavaScript
echo "üìã Test des erreurs:"
ERROR_COUNT=0

if echo "$RESPONSE" | grep -q -i "missing_message"; then
  echo "‚ùå Erreurs de traduction d√©tect√©es"
  ERROR_COUNT=$((ERROR_COUNT + 1))
fi

if echo "$RESPONSE" | grep -q -i "error\|exception"; then
  echo "‚ùå Erreurs JavaScript d√©tect√©es"
  ERROR_COUNT=$((ERROR_COUNT + 1))
fi

if echo "$RESPONSE" | grep -q "\[EN\]"; then
  echo "‚ö†Ô∏è  Traductions non finalis√©es d√©tect√©es"
fi

if [ $ERROR_COUNT -eq 0 ]; then
  echo "‚úÖ Aucune erreur majeure d√©tect√©e"
fi

echo
echo "‚úÖ Tests termin√©s"

# Test du bouton de cr√©ation (extraction du HTML)
echo "üìã Test du bouton de cr√©ation:"
if echo "$RESPONSE" | grep -q -i "href.*create\|cr√©er.*annonce"; then
  echo "‚úÖ Bouton de cr√©ation trouv√© dans le HTML"
else
  echo "‚ùå Bouton de cr√©ation non trouv√©"
fi

echo
echo "üîß Pour tester la cr√©ation d'annonce manuellement:"
echo "  1. Allez sur http://localhost:3000/fr/client/announcements"
echo "  2. Cliquez sur 'Cr√©er une annonce'"
echo "  3. Remplissez le formulaire"
echo "  4. V√©rifiez la console (F12) pour les erreurs"