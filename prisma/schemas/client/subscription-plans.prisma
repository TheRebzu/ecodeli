// ===== MODÈLES D'ABONNEMENTS CLIENTS ECODELI =====
// Ce fichier contient les modèles pour les formules d'abonnement selon le cahier des charges

/// Plan d'abonnement client EcoDeli avec fonctionnalités spécifiques
model ClientSubscriptionDetail {
  id                    String                  @id @default(cuid())
  userId                String                  @unique
  currentPlan           ClientSubscriptionPlan  @default(FREE)
  
  // Informations de facturation
  monthlyPrice          Decimal                 @db.Decimal(6,2) // Prix mensuel
  currency              String                  @default("EUR")
  stripeSubscriptionId  String?                 @unique
  
  // Dates importantes
  startDate             DateTime                @default(now())
  endDate               DateTime?               // Date de fin (null = actif)
  nextBillingDate       DateTime?               // Prochaine facturation
  cancelAtPeriodEnd     Boolean                 @default(false)
  cancelledAt           DateTime?
  
  // Avantages par plan - FREE
  hasInsurance          Boolean                 @default(false) // Pas d'assurance en FREE
  insuranceAmount       Decimal?                @db.Decimal(8,2) // 115€ STARTER, 3000€ PREMIUM
  
  // Avantages par plan - Réductions
  discountPercentage    Int                     @default(0) // 0% FREE, 5% STARTER, 9% PREMIUM
  hasFirstDeliveryFree  Boolean                 @default(false) // Seulement PREMIUM
  
  // Avantages par plan - Envoi prioritaire
  priorityShippingBonus Int                     @default(0) // +15% tarif en STARTER
  freePriorityPerMonth  Int                     @default(0) // 3 gratuits/mois en PREMIUM
  usedPriorityThisMonth Int                     @default(0) // Compteur mensuel
  
  // Compteurs mensuels (reset chaque mois)
  currentMonthUsage     Json?                   // Usage du mois en cours {deliveries: 0, savings: 0}
  lastResetDate         DateTime?               // Dernière remise à zéro des compteurs
  
  // Historique des changements de plan
  previousPlan          ClientSubscriptionPlan?
  planChangedAt         DateTime?
  planChangeReason      String?                 // Raison du changement
  
  // Paramètres de notification
  billingNotifications  Boolean                 @default(true)
  usageNotifications    Boolean                 @default(true)
  promotionNotifications Boolean                @default(true)
  
  // Métadonnées
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  
  // Relations
  user                  User                    @relation("ClientSubscription", fields: [userId], references: [id], onDelete: Cascade)
  
  // Historique des paiements
  paymentHistory        SubscriptionPayment[]
  
  // Usage mensuel détaillé
  monthlyUsage          MonthlyUsageHistory[]
  
  // Promotions appliquées
  appliedPromotions     SubscriptionPromotion[]

  @@index([currentPlan])
  @@index([nextBillingDate])
  @@index([stripeSubscriptionId])
  @@map("client_subscription_details")
}

/// Historique des paiements d'abonnement
model SubscriptionPayment {
  id              String                    @id @default(cuid())
  subscriptionId  String
  amount          Decimal                   @db.Decimal(8,2)
  currency        String                    @default("EUR")
  status          PaymentStatus             @default(PENDING)
  
  // Informations Stripe
  stripePaymentId String?                   @unique
  stripeInvoiceId String?
  
  // Période couverte
  periodStart     DateTime
  periodEnd       DateTime
  
  // Détails du paiement
  paidAt          DateTime?
  failedAt        DateTime?
  failureReason   String?
  
  // Relations
  subscription    ClientSubscriptionDetail  @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)
  
  createdAt       DateTime                  @default(now())
  updatedAt       DateTime                  @updatedAt

  @@index([subscriptionId])
  @@index([status])
  @@index([periodStart, periodEnd])
  @@map("subscription_payments")
}

/// Historique d'usage mensuel détaillé
model MonthlyUsageHistory {
  id                    String                    @id @default(cuid())
  subscriptionId        String
  
  // Période
  year                  Int
  month                 Int
  
  // Statistiques d'usage
  totalDeliveries       Int                       @default(0)
  totalAmount           Decimal                   @db.Decimal(10,2) @default(0)
  totalSavings          Decimal                   @db.Decimal(8,2) @default(0)
  
  // Usage des avantages
  priorityDeliveries    Int                       @default(0)
  freePriorityUsed      Int                       @default(0)
  insuranceClaims       Int                       @default(0)
  
  // Détails par type de service
  packageDeliveries     Int                       @default(0)
  personalServices      Int                       @default(0)
  storageUsage          Int                       @default(0) // Heures d'usage box
  
  // Satisfaction
  averageRating         Float?                    // Note moyenne donnée
  customerFeedback      String?                   // Commentaires généraux
  
  // Relations
  subscription          ClientSubscriptionDetail  @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)
  
  createdAt             DateTime                  @default(now())

  @@unique([subscriptionId, year, month])
  @@index([subscriptionId])
  @@index([year, month])
  @@map("monthly_usage_history")
}

/// Promotions appliquées aux abonnements
model SubscriptionPromotion {
  id              String                    @id @default(cuid())
  subscriptionId  String
  promotionCode   String                    // Code promo utilisé
  promotionType   String                    // TYPE: DISCOUNT, FREE_MONTH, UPGRADE, etc.
  
  // Valeurs de la promotion
  discountAmount  Decimal?                  @db.Decimal(8,2) // Montant de réduction
  discountPercent Int?                      // % de réduction
  freeMonths      Int?                      // Mois gratuits
  
  // Validité
  appliedAt       DateTime                  @default(now())
  validUntil      DateTime?                 // Date limite d'utilisation
  isActive        Boolean                   @default(true)
  
  // Utilisation
  timesUsed       Int                       @default(1)
  maxUsage        Int?                      // Usage maximum autorisé
  
  // Relations
  subscription    ClientSubscriptionDetail  @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)

  @@index([subscriptionId])
  @@index([promotionCode])
  @@index([validUntil])
  @@map("subscription_promotions")
}

/// Configuration des formules d'abonnement (paramètres globaux)
model SubscriptionPlanConfig {
  id                    String                  @id @default(cuid())
  planType              ClientSubscriptionPlan  @unique
  
  // Prix et facturation
  monthlyPrice          Decimal                 @db.Decimal(6,2)
  yearlyPrice           Decimal?                @db.Decimal(6,2) // Prix annuel (optionnel)
  currency              String                  @default("EUR")
  
  // Avantages inclus
  insuranceAmount       Decimal?                @db.Decimal(8,2)
  discountPercentage    Int                     @default(0)
  priorityShippingBonus Int                     @default(0) // % bonus sur tarif prioritaire
  freePriorityPerMonth  Int                     @default(0)
  hasFirstDeliveryFree  Boolean                 @default(false)
  
  // Limites et restrictions
  maxDeliveriesPerMonth Int?                    // Limite mensuelle (null = illimité)
  maxStorageHours       Int?                    // Heures de stockage incluses
  maxInsuranceClaims    Int?                    // Nombre max de réclamations assurance
  
  // Paramètres commerciaux
  isActive              Boolean                 @default(true)
  sortOrder             Int                     @default(0)
  featuredPlan          Boolean                 @default(false) // Plan mis en avant
  
  // Descriptions marketing
  title                 String                  // Titre commercial
  description           String                  // Description courte
  features              Json                    // Liste des fonctionnalités (array)
  limitations           Json?                   // Limitations spécifiques (array)
  
  // Métadonnées
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  createdBy             String?                 // Admin qui a créé

  @@index([isActive, sortOrder])
  @@map("subscription_plan_configs")
}