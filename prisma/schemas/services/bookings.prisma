// ===== MODÈLES DE RÉSERVATION DE SERVICES =====
// Ce fichier contient les modèles pour les réservations de services et évaluations.

/// Réservation d'un service
model ServiceBooking {
  id              String         @id @default(cuid())
  clientId        String
  providerId      String
  serviceId       String
  startTime       DateTime
  endTime         DateTime
  status          BookingStatus  @default(PENDING)
  totalPrice      Decimal
  paymentId       String?
  notes           String?
  clientNotes     String?        // Notes du client
  providerNotes   String?        // Notes privées du prestataire
  confirmationCode String?       // Code de confirmation
  location        String?        // Lieu du service si différent
  participantCount Int          @default(1)
  reminderSent    Boolean       @default(false)
  cancelledAt     DateTime?
  cancelledBy     String?       // ID de qui a annulé
  cancellationReason String?
  rescheduledFrom String?       // ID de la réservation originale si reprogrammée
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  
  // Relations avec User, Service et Payment
  client          User          @relation("ClientBookings", fields: [clientId], references: [id])
  provider        User          @relation("ProviderBookings", fields: [providerId], references: [id])
  service         Service       @relation(fields: [serviceId], references: [id])
  payment         Payment?      @relation(fields: [paymentId], references: [id])
  review          ServiceReview?
  rescheduledTo   ServiceBooking[] @relation("BookingReschedule")
  originalBooking ServiceBooking?  @relation("BookingReschedule", fields: [rescheduledFrom], references: [id])

  @@index([clientId])
  @@index([providerId])
  @@index([serviceId])
  @@index([paymentId])
  @@index([status])
  @@index([startTime])
}

/// Évaluation d'un service après réservation
model ServiceReview {
  id          String         @id @default(cuid())
  bookingId   String         @unique
  rating      Int            // Note de 1 à 5
  comment     String?
  pros        String[]       // Points positifs
  cons        String[]       // Points négatifs
  wouldRecommend Boolean?    // Recommanderait-il ce service
  punctuality Int?          // Note pour la ponctualité (1-5)
  quality     Int?          // Note pour la qualité (1-5)
  communication Int?        // Note pour la communication (1-5)
  valueForMoney Int?        // Note pour le rapport qualité-prix (1-5)
  isVerified  Boolean       @default(false) // Évaluation vérifiée
  helpfulVotes Int          @default(0)     // Votes "utile"
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  
  // Relation avec la réservation
  booking     ServiceBooking @relation(fields: [bookingId], references: [id])

  @@index([rating])
  @@index([createdAt])
  @@index([isVerified])
} 