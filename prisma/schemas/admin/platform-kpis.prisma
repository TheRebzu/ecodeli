// ===== MODÈLES KPIs ET MONITORING PLATEFORME =====
// Ce fichier contient les modèles pour le dashboard admin et le monitoring des 6 entrepôts selon le cahier des charges

/// KPI temps réel de la plateforme
model PlatformKpi {
  id            String    @id @default(cuid())
  kpiType       KpiType   // Type de KPI
  
  // Valeurs du KPI
  currentValue  Decimal   @db.Decimal(15,2) // Valeur actuelle
  previousValue Decimal?  @db.Decimal(15,2) // Valeur précédente pour comparaison
  targetValue   Decimal?  @db.Decimal(15,2) // Objectif cible
  
  // Période de mesure
  periodStart   DateTime  // Début de la période
  periodEnd     DateTime  // Fin de la période
  periodType    String    // Type de période: HOUR, DAY, WEEK, MONTH, YEAR
  
  // Métadonnées
  unit          String?   // Unité de mesure (€, %, nb, etc.)
  description   String?   // Description du KPI
  formula       String?   // Formule de calcul
  
  // Alertes
  alertThreshold Decimal? @db.Decimal(15,2) // Seuil d'alerte
  isAlert       Boolean   @default(false) // En alerte actuellement
  alertMessage  String?   // Message d'alerte
  
  // Évolution
  growthRate    Decimal?  @db.Decimal(8,4) // Taux de croissance (%)
  trend         String?   // Tendance: UP, DOWN, STABLE
  
  // Détails par site
  siteBreakdown Json?     // Répartition par site (JSON)
  
  // Métadonnées
  calculatedAt  DateTime  @default(now())
  createdAt     DateTime  @default(now())
  
  // Historique des valeurs
  history       KpiHistory[]

  @@index([kpiType, periodType])
  @@index([periodStart, periodEnd])
  @@index([isAlert])
  @@map("platform_kpis")
}

/// Historique des valeurs de KPIs
model KpiHistory {
  id        String      @id @default(cuid())
  kpiId     String
  value     Decimal     @db.Decimal(15,2)
  timestamp DateTime    @default(now())
  
  // Relations
  kpi       PlatformKpi @relation(fields: [kpiId], references: [id], onDelete: Cascade)

  @@index([kpiId, timestamp])
  @@map("kpi_history")
}

/// Statistiques multi-sites (6 entrepôts EcoDeli)
model MultiSiteStats {
  id            String        @id @default(cuid())
  siteType      SiteStatsType // Type de site/entrepôt
  
  // Informations du site
  siteName      String        // Nom du site
  siteAddress   String        // Adresse complète
  siteLat       Float         // Latitude
  siteLng       Float         // Longitude
  
  // Période de statistique
  periodStart   DateTime      // Début de la période
  periodEnd     DateTime      // Fin de la période
  periodType    String        // HOUR, DAY, WEEK, MONTH
  
  // Métriques d'activité
  deliveryCount         Int             @default(0) // Nombre de livraisons
  activeDeliverers      Int             @default(0) // Livreurs actifs
  storageOccupancy      Float           @default(0) // Taux d'occupation stockage (%)
  averageDeliveryTime   Float?          // Temps moyen de livraison (min)
  
  // Métriques financières
  revenue              Decimal          @db.Decimal(12,2) @default(0) // Chiffre d'affaires
  commissions          Decimal          @db.Decimal(10,2) @default(0) // Commissions perçues
  averageOrderValue    Decimal?         @db.Decimal(8,2) // Panier moyen
  
  // Métriques qualité
  customerSatisfaction Float?           // Satisfaction client (note/5)
  onTimeDeliveryRate   Float            @default(0) // Taux de livraison à l'heure (%)
  errorRate            Float            @default(0) // Taux d'erreur (%)
  
  // Métriques utilisateurs
  newCustomers         Int              @default(0) // Nouveaux clients
  activeCustomers      Int              @default(0) // Clients actifs
  churnRate            Float?           // Taux de désabonnement (%)
  
  // Capacités et ressources
  maxStorageCapacity   Int              // Capacité stockage maximale
  currentStorageUsage  Int              @default(0) // Usage actuel
  availableDeliverers  Int              @default(0) // Livreurs disponibles
  
  // Alertes et problèmes
  activeAlerts         Int              @default(0) // Alertes actives
  criticalIssues       Int              @default(0) // Problèmes critiques
  maintenanceMode      Boolean          @default(false) // Mode maintenance
  
  // Comparaison avec autres sites
  rankAmongSites       Int?             // Classement parmi les sites
  performanceIndex     Float?           // Indice de performance (0-100)
  
  // Métadonnées
  calculatedAt         DateTime         @default(now())
  createdAt            DateTime         @default(now())
  
  // Relations
  warehouse            Warehouse?       @relation(fields: [siteType], references: [siteCode])

  @@index([siteType])
  @@index([periodStart, periodEnd])
  @@index([rankAmongSites])
  @@map("multi_site_stats")
}

/// Prévisions financières
model FinancialForecast {
  id              String        @id @default(cuid())
  forecastType    ForecastType  // Type de prévision
  
  // Période de prévision
  periodStart     DateTime      // Début de la période prévue
  periodEnd       DateTime      // Fin de la période prévue
  
  // Métriques prévisionnelles
  projectedRevenue      Decimal     @db.Decimal(15,2) // CA projeté
  projectedCosts        Decimal     @db.Decimal(15,2) // Coûts projetés
  projectedProfit       Decimal     @db.Decimal(15,2) // Profit projeté
  projectedGrowthRate   Decimal     @db.Decimal(6,4)  // Taux de croissance (%)
  
  // Prévisions d'activité
  projectedDeliveries   Int         // Livraisons prévues
  projectedNewUsers     Int         // Nouveaux utilisateurs prévus
  projectedChurnRate    Decimal     @db.Decimal(6,4) // Taux de désabonnement prévu
  
  // Scénarios
  scenarioType          String      // OPTIMISTIC, REALISTIC, PESSIMISTIC
  confidenceLevel       Float       // Niveau de confiance (0-100%)
  
  // Hypothèses
  assumptions           Json        // Hypothèses de calcul (JSON)
  riskFactors           Json?       // Facteurs de risque identifiés
  
  // Comparaison avec réalité
  actualRevenue         Decimal?    @db.Decimal(15,2) // CA réel (après coup)
  actualCosts           Decimal?    @db.Decimal(15,2) // Coûts réels
  actualProfit          Decimal?    @db.Decimal(15,2) // Profit réel
  accuracyScore         Float?      // Score de précision (%)
  
  // Mise à jour
  lastRevisedAt         DateTime?   // Dernière révision
  revisionNotes         String?     // Notes de révision
  
  // Créateur
  createdBy             String      // Admin qui a créé la prévision
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
  
  // Relations
  creator               User        @relation("ForecastCreator", fields: [createdBy], references: [id])

  @@index([forecastType])
  @@index([periodStart, periodEnd])
  @@index([scenarioType])
  @@map("financial_forecasts")
}

/// Monitoring temps réel de la plateforme
model PlatformMonitoring {
  id                String    @id @default(cuid())
  
  // Métriques système
  systemStatus      String    @default("HEALTHY") // HEALTHY, WARNING, CRITICAL, DOWN
  uptime            Float     // Uptime en %
  responseTime      Float     // Temps de réponse moyen (ms)
  errorRate         Float     // Taux d'erreur (%)
  
  // Métriques base de données
  dbConnectionCount Int       // Connexions DB actives
  dbQueryTime       Float     // Temps de requête moyen (ms)
  dbStorageUsage    Float     // Usage stockage DB (%)
  
  // Métriques API
  apiRequestCount   Int       // Requêtes API/minute
  apiErrorCount     Int       // Erreurs API/minute
  apiLatency        Float     // Latence API moyenne (ms)
  
  // Métriques utilisateurs
  activeUsers       Int       // Utilisateurs actifs en temps réel
  concurrentSessions Int      // Sessions concurrentes
  newRegistrations  Int       // Nouvelles inscriptions/heure
  
  // Métriques livraisons
  ongoingDeliveries Int       // Livraisons en cours
  pendingDeliveries Int       // Livraisons en attente
  completedToday    Int       // Livraisons terminées aujourd'hui
  
  // Métriques financières temps réel
  revenueToday      Decimal   @db.Decimal(10,2) // CA du jour
  transactionsCount Int       // Transactions du jour
  averageBasket     Decimal   @db.Decimal(8,2)  // Panier moyen
  
  // Alertes actives
  activeAlerts      Json?     // Alertes en cours (array)
  criticalAlerts    Int       @default(0) // Nombre d'alertes critiques
  warningAlerts     Int       @default(0) // Nombre d'alertes warning
  
  // Métadonnées
  timestamp         DateTime  @default(now())
  
  @@index([systemStatus])
  @@index([timestamp])
  @@map("platform_monitoring")
}

/// Configuration d'alertes
model AlertConfiguration {
  id              String    @id @default(cuid())
  alertType       String    // Type d'alerte
  
  // Conditions de déclenchement
  metricName      String    // Nom de la métrique surveillée
  threshold       Decimal   @db.Decimal(15,2) // Seuil de déclenchement
  operator        String    // Opérateur: GT, LT, EQ, etc.
  duration        Int       // Durée avant déclenchement (minutes)
  
  // Paramètres de l'alerte
  severity        String    // CRITICAL, WARNING, INFO
  message         String    // Message d'alerte
  isActive        Boolean   @default(true)
  
  // Notifications
  emailNotification Boolean @default(true)
  smsNotification   Boolean @default(false)
  pushNotification  Boolean @default(true)
  webhookUrl        String? // Webhook à appeler
  
  // Destinataires
  notifyRoles     String[]  // Rôles à notifier
  notifyUsers     String[]  // Utilisateurs spécifiques à notifier
  
  // Historique
  lastTriggered   DateTime? // Dernière activation
  triggerCount    Int       @default(0) // Nombre d'activations
  
  // Métadonnées
  createdBy       String    // Admin créateur
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  // Relations
  creator         User      @relation("AlertCreator", fields: [createdBy], references: [id])
  
  // Historique des déclenchements
  triggers        AlertTrigger[]

  @@index([isActive])
  @@index([severity])
  @@map("alert_configurations")
}

/// Historique des déclenchements d'alertes
model AlertTrigger {
  id            String              @id @default(cuid())
  alertId       String
  
  // Informations du déclenchement
  triggerValue  Decimal             @db.Decimal(15,2) // Valeur qui a déclenché
  message       String              // Message personnalisé
  severity      String              // Sévérité au moment du déclenchement
  
  // Résolution
  isResolved    Boolean             @default(false)
  resolvedAt    DateTime?
  resolvedBy    String?             // Admin qui a résolu
  resolutionNotes String?           // Notes de résolution
  
  // Métadonnées
  triggeredAt   DateTime            @default(now())
  
  // Relations
  alert         AlertConfiguration  @relation(fields: [alertId], references: [id], onDelete: Cascade)
  resolver      User?               @relation("AlertResolver", fields: [resolvedBy], references: [id])

  @@index([alertId])
  @@index([triggeredAt])
  @@index([isResolved])
  @@map("alert_triggers")
}