// ===== MODÈLES DE COMMISSIONS ET RAPPORTS FINANCIERS =====
// Ce fichier contient les modèles pour les commissions, cycles de facturation, et rapports financiers.

/// Commission appliquée sur les transactions
model Commission {
  id              String    @id @default(cuid())
  rate            Decimal
  promotionId     String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  applicableRoles String[]
  calculationType String    @default("PERCENTAGE")
  countryCode     String?
  currency        String    @default("EUR")
  description     String?
  endDate         DateTime?
  flatFee         Decimal?
  isActive        Boolean   @default(true)
  maximumAmount   Decimal?
  minimumAmount   Decimal?
  payoutSchedule  String?   @default("IMMEDIATE")
  productCategory String?
  serviceType     String
  startDate       DateTime?
  tierThresholds  Json?
  
  // Relations
  payments        Payment[]

  @@index([serviceType])
  @@index([isActive])
  @@map("commissions")
}

/// Cycle de facturation pour les commerçants et prestataires
model BillingCycle {
  id               String    @id @default(cuid())
  merchantId       String?
  providerId       String?
  periodStart      DateTime
  periodEnd        DateTime
  status           String    @default("PENDING")
  invoiceId        String?
  totalAmount      Decimal?
  serviceFees      Decimal?
  commissionFees   Decimal?
  processingFees   Decimal?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  scheduledRunDate DateTime
  serviceSummary   Json?
  lastRunAt        DateTime?
  errorMessage     String?
  retryCount       Int       @default(0)

  @@index([periodStart, periodEnd])
  @@index([status])
  @@map("billing_cycles")
}

/// Compte financier de la plateforme
model FinancialAccount {
  id                 String    @id @default(cuid())
  name               String
  accountType        String
  balance            Decimal   @default(0)
  currency           String    @default("EUR")
  description        String?
  isActive           Boolean   @default(true)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  reconciliationDate DateTime?
  bankAccount        String?
  accountNumber      String?
  notes              String?

  @@map("financial_accounts")
}

/// Taux de taxe applicable
model TaxRate {
  id          String    @id @default(cuid())
  name        String
  rate        Decimal
  countryCode String
  description String?
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  taxType     String    @default("VAT")
  region      String?
  startDate   DateTime?
  endDate     DateTime?

  @@index([countryCode])
  @@index([isActive])
  @@map("tax_rates")
}

/// Rapport financier généré par la plateforme
model FinancialReport {
  id               String   @id @default(cuid())
  data             Json?
  totalRevenue     Decimal?
  totalCommissions Decimal?
  status           String   @default("DRAFT")
  generatedAt      DateTime @default(now())
  fileUrl          String?
  generatedBy      String?
  netRevenue       Decimal?
  notes            String?
  periodEnd        DateTime
  periodStart      DateTime
  reportType       String
  totalFees        Decimal?

  @@index([reportType])
  @@index([periodStart, periodEnd])
  @@map("financial_reports")
}

/// Tâche financière à effectuer
model FinancialTask {
  id          String                @id @default(cuid())
  title       String
  description String?
  dueDate     DateTime?
  completed   Boolean               @default(false)
  completedAt DateTime?
  priority    FinancialTaskPriority
  category    FinancialTaskCategory
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @updatedAt
  userId      String
  
  // Relations
  user        User                  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([priority])
  @@index([category])
  @@index([completed])
  @@map("financial_tasks")
}

/// Enregistrement des promotions
model PromotionRecord {
  id          String   @id @default(cuid())
  type        String
  serviceType String?
  rate        Decimal
  startDate   DateTime
  endDate     DateTime
  isActive    Boolean  @default(true)
  description String?
  createdAt   DateTime @default(now())

  @@map("promotion_records")
} 