#!/usr/bin/env node

import { PrismaClient } from "@prisma/client";
import { SeedLogger } from "./utils/seed-logger";
import {
  seedMultiVerificationUsers,
  validateMultiVerificationUsers,
} from "./users/multi-verification-users-seed";

/**
 * Script rapide pour cr√©er des utilisateurs de test avec diff√©rents statuts
 * Utilis√© pour tester les interfaces admin avec des donn√©es r√©alistes
 */

async function main() {
  const prisma = new PrismaClient();
  const logger = new SeedLogger(true); // verbose = true

  try {
    logger.info(
      "TEST_USERS",
      "üöÄ D√©marrage du seed des utilisateurs de test...",
    );

    // Options pour forcer la recr√©ation
    const options = {
      force: true, // Supprime et recr√©e les utilisateurs de test
      verbose: true,
    };

    // Ex√©cuter le seed
    const result = await seedMultiVerificationUsers(prisma, logger, options);

    // Validation
    const isValid = await validateMultiVerificationUsers(prisma, logger);

    // R√©sum√© final
    if (isValid && result.errors === 0) {
      logger.info("TEST_USERS", "‚úÖ Utilisateurs de test cr√©√©s avec succ√®s !");
      logger.info("TEST_USERS", "üìã Vous pouvez maintenant tester:");
      logger.info("TEST_USERS", "   - Interface admin clients");
      logger.info("TEST_USERS", "   - Interface admin utilisateurs");
      logger.info("TEST_USERS", "   - V√©rification de documents");
      logger.info("TEST_USERS", "   - Diff√©rents statuts utilisateurs");
      logger.info("TEST_USERS", "");
      logger.info("TEST_USERS", "üîë Comptes de test cr√©√©s:");
      logger.info("TEST_USERS", "   üìß admin@test-ecodeli.fr (ADMIN)");
      logger.info(
        "TEST_USERS",
        "   üìß jean.dupont@test-ecodeli.fr (CLIENT ACTIF)",
      );
      logger.info(
        "TEST_USERS",
        "   üìß marie.martin@test-ecodeli.fr (CLIENT EN ATTENTE)",
      );
      logger.info(
        "TEST_USERS",
        "   üìß pierre.durand@test-ecodeli.fr (CLIENT SUSPENDU)",
      );
      logger.info(
        "TEST_USERS",
        "   üìß antoine.livreur@test-ecodeli.fr (LIVREUR ACTIF)",
      );
      logger.info(
        "TEST_USERS",
        "   üìß sophia.velo@test-ecodeli.fr (LIVREUR EN ATTENTE)",
      );
      logger.info(
        "TEST_USERS",
        "   üìß boulangerie.martin@test-ecodeli.fr (MERCHANT ACTIF)",
      );
      logger.info(
        "TEST_USERS",
        "   üìß paul.plombier@test-ecodeli.fr (PROVIDER ACTIF)",
      );
      logger.info("TEST_USERS", "");
      logger.info("TEST_USERS", "üîí Mot de passe pour tous: Test2024!");
    } else {
      logger.error(
        "TEST_USERS",
        "‚ùå Erreurs lors de la cr√©ation des utilisateurs de test",
      );
      process.exit(1);
    }
  } catch (error) {
    logger.error("TEST_USERS", `‚ùå Erreur fatale: ${error}`);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

// Point d'entr√©e
main().catch((error) => {
  console.error("‚ùå Erreur lors de l'ex√©cution du script:", error);
  process.exit(1);
});
