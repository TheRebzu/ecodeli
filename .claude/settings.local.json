{
  "permissions": {
    "allow": [
      "Bash(pnpm add:*)",
      "Bash(npx tsc:*)",
      "Bash(pnpm run build:*)",
      "Bash(pnpm run dev:*)",
      "Bash(pnpm run start:*)",
      "Bash(pnpm run test:*)",
      "Bash(pnpm run lint:*)",
      "Bash(pnpm run format:*)",
      "Bash(pnpm run typecheck:*)",
      "Bash(pnpm run test:*)",
      "Bash(pnpm run lint:*)",
      "Bash(pnpm run format:*)",
      "Bash(pnpm run typecheck:*)",
      "Bash(pnpm run test:*)",
      "Bash(pnpm run lint:*)",
      "Bash(pnpm run format:*)",
      "Bash(pnpm run typecheck:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(multiedit:*)",
      "Bash(notebookedit:*)",
      "Bash(notebookread:*)",
      "Bash(read:*)",
      "Bash(todoread:*)",
      "Bash(todowrite:*)",
      "Bash(webfetch:*)",
      "Bash(websearch:*)",
      "Bash(write:*)",
      "Bash(file_access:*)",
      "Bash(file_list:*)",
      "Bash(file_search:*)",
      "Bash(file_edit:*)",
      "Bash(file_read:*)",
      "Bash(file_write:*)",
      "Bash(file_delete:*)",
      "Bash(file_rename:*)",
      "Bash(file_copy:*)",
      "Bash(file_move:*)",
      "Bash(file_create:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(docker-compose.prod:*)",
      "Bash(docker-compose.dev:*)",
      "Bash(docker-compose.prod.yml:*)",
      "Bash(docker-compose.dev.yml:*)",
      "Bash(docker-compose.prod.yml:*)",
      "Bash(./scripts/docker/deploy.sh:*)",
      "Bash(./scripts/docker/build.sh:*)",
      "Bash(./scripts/docker/start.sh:*)",
      "Bash(./scripts/docker/stop.sh:*)",
      "Bash(./scripts/docker/restart.sh:*)",
      "Bash(./scripts/docker/logs.sh:*)",
      "Bash(./scripts/docker/logs.sh:*)",
      "Bash(pnpm db:generate:*)",
      "Bash(pnpm db:push:*)",
      "Bash(pnpm dev:*)",
      "Bash(curl:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run typecheck:*)",
      "Bash(rg:*)",
      "Bash(npm run lint:*)",
      "Bash(pnpm install:*)",
      "Bash(node:*)",
      "Bash(source .env)",
      "Bash(npx tsx:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm run build:*)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm check:*)",
      "Bash(./validate-refactoring.sh:*)",
      "Bash(npm install:*)",
      "Bash(tsc:*)",
      "Bash(pnpm remove:*)",
      "Bash(npx prisma:*)",
      "Bash(pnpm run:*)",
      "Bash(tsx scripts/prisma/merge-schemas.ts:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:Amine2004@172.30.80.1:5432/ecodeli?schema=public\" npx prisma db pull --force)",
      "Bash(sed:*)",
      "Bash(jq:*)",
      "Bash(python3:*)",
      "Bash(npm run ts-node:*)",
      "Bash(pnpm i18n:smart-complete:*)",
      "Bash(npm run dev:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(pnpm prisma generate:*)",
      "Bash(./node_modules/.bin/prisma:*)",
      "Bash(pnpm exec prisma:*)",
      "Bash(npx --yes prisma@latest generate)",
      "Bash(timeout 30s pnpm dev)",
      "Bash(timeout:*)",
      "Bash(./scripts/test/curl-pages-test.sh:*)",
      "Bash(./scripts/test/static-pages-test.sh:*)",
      "Bash(/mnt/c/Users/Amine/WebstormProjects/ecodeli/scripts/auth-curl-example.sh)",
      "Bash(cat:*)",
      "Bash(-H \"Content-Type: application/json\" )",
      "Bash(-v)",
      "Bash(-H \"Content-Type: application/json\" )",
      "Bash(-d '{}' )",
      "Bash(-H \"Content-Type: application/json\" )",
      "Bash(-H \"Content-Type: application/json\" )",
      "Bash(-c cookies.txt )",
      "Bash(-H \"Content-Type: application/json\" )",
      "Bash(npm install:*)",
      "Bash(pnpm add:*)",
      "Bash(chmod:*)",
      "Bash(find:*)",
      "Bash(ip route:*)",
      "Bash(./scripts/test-all-endpoints.sh:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(/tmp/jq:*)",
      "Bash(sudo cp:*)",
      "Bash(export:*)",
      "Bash(npx @better-auth/cli generate:*)",
      "Bash(npm run:*)",
      "Bash(tasklist)",
      "Bash(PGPASSWORD=Amine2004 psql -h localhost -U postgres -d ecodeli -c \"UPDATE \\\"User\\\" SET \\\"isActive\\\" = true, \\\"validationStatus\\\" = 'VALIDATED' WHERE email = 'client1@test.com';\")",
      "Bash(powershell.exe:*)",
      "Bash(npx ts-node:*)"
    ]
  },
  "allowed_tools": [
    "agent",
    "bash",
    "edit",
    "glob",
    "grep",
    "ls",
    "multiedit",
    "notebookedit",
    "notebookread",
    "read",
    "todoread",
    "todowrite",
    "webfetch",
    "websearch",
    "write",
    "file_access",
    "file_list",
    "file_search",
    "file_edit",
    "file_read",
    "file_write",
    "file_delete",
    "file_rename",
    "file_copy",
    "file_move",
    "file_create",
    "file_access",
    "file_list",
    "file_search",
    "file_edit",
    "file_read",
    "file_write",
    "file_delete"
  ],
  "auto_approve": {
    "bash_commands": true,
    "file_modifications": true,
    "web_access": true,
    "file_read": true,
    "file_write": true,
    "file_delete": true,
    "file_rename": true,
    "file_copy": true,
    "file_move": true,
    "file_create": true,
    "file_access": true,
    "file_list": true,
    "file_search": true,
    "file_edit": true
  },
  "security_level": "permissive"
}