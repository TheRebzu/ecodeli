services:
  web:
    build:
      context: .
      dockerfile: docker/development/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      # Monter uniquement les dossiers source, config et assets
      - ./src:/app/src
      - ./public:/app/public
      # Ne pas monter le dossier prisma pour éviter les conflits
      - ./next.config.mjs:/app/next.config.mjs
      - ./postcss.config.mjs:/app/postcss.config.mjs
      - ./tailwind.config.ts:/app/tailwind.config.ts
      - ./tsconfig.json:/app/tsconfig.json
      # Exclure explicitement node_modules
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@db:5432/ecodeli?schema=public
    depends_on:
      - db
      - redis
      - mailhog
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ecodeli
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: unless-stopped

  prisma-studio:
    build:
      context: .
      dockerfile: docker/development/Dockerfile
    command: npx prisma studio
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/ecodeli?schema=public
    # Important: ne pas monter les répertoires locaux qui peuvent interférer avec prisma
    volumes:
      - /app/node_modules
    depends_on:
      - db
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
